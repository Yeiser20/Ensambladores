DATOS SEGMENT PARA PUBLIC 'DATA'

RESULT      DB  8  DUP (0)
NUM         DW  16,3,2,7,45,2,87,36,56,12
PARESA       DW  0,0,0,0,0,0,0,0,0,0
IMPARESA     DW  0,0,0,0,0,0,0,0,0,0

DATOS       ENDS


PILA SEGMENT PARA STACK 'STACK'
DB      64     DUP('STACK')

PILA ENDS

CODIGO SEGMENT PARA PUBLIC 'CODE'
INICIO PROC FAR

ASSUME CS:CODIGO,DS:DATOS,PILA:STACK
PUSH   DS
MOV    AX,0
PUSH   AX

MOV    AX, DATOS
MOV    DS,AX
MOV    ES,AX
MOV     DI,18





;INICIALIZAMOS EL CONTADOR EN 7(NUMERO DE PASADAS DEL CICLO)


;PROCEDIMIENTO PARA REALIZAR LOS CALCULOS;
REPETIR10:
MOV     AX,NUM[DI]                                  ;CARGAMOS EN AX EL NUMERO A CONVERTIR
MOV     BL,2                                        ;CARGAMOS EN BL LA BASE A LA QUE SE CONVERTIRA
MOV     CX,7
MOV     SI,7
MOV     DX, NUM[DI]
CMP     DX,0
JZ      IMP_RESULT0

MOV     DX, NUM[DI]                                 ;SI EL NUMERO A CONVERTIR ES 1
CMP     DX,1
JZ      IMP_RESULT1
CALCULO:
DIV     BL                                          ;SE DIVIDE AX ENTRE BL
;SE GUARDA EN AL EL COCIENTE Y EN AH EL RESIDUO
MOV     RESULT[SI],AH

SEGUIR:                                                 ;GUARDAMOS EL RESIDUO EN EL ARREGLO RESULT
DEC     SI                                          ;DECREMENTAMOS EL INDICE DEL ARREGLO
AND     AX,0X00FF                                   ;BORRAMOS AH DE AX (SE BORRA EL ULTIMO RESIDUO)
CMP     AL,2                                        ;DIVISION ENTRE 2
JL      IMP_RESULT1
LOOP    CALCULO                                     ;SE REINCIA EL PROCESO

IMP_RESULT0:

MOV     RESULT[SI],0                                ;COMO EL COCIENTE FUE MENOR QUE LA BASE 2, ENTONCES EL BIT

IMP_RESULT1:
MOV     RESULT[SI],1

CMP     RESULT[7],0
JZ      PARES
CMP     RESULT[7],1
JZ      IMPARES
PARES:
MOV     CX,NUM[DI]
MOV     PARESA[DI],CX
JMP     SALIR

IMPARES:
MOV     CX,NUM[DI]
MOV     IMPARESA[DI],CX
JMP     SALIR

SALIR:
DEC     DI
DEC     DI
MOV     CX,7
MOV     SI,7
LIMPIAR:
MOV     RESULT[SI],0
DEC     SI
CMP     SI,0
JL      REPETIR10
CMP     DI,0
JL      TERMINAR
JMP     LIMPIAR
TERMINAR:
RET
INICIO  ENDP
CODIGO  ENDS
END     INICIO

