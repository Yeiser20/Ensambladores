/* The following code was generated by JFlex 1.4.3 on 8/11/21 11:43 AM */

package analisisensamblador;
import static analisisensamblador.Tokens.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 8/11/21 11:43 AM from the specification file
 * <tt>C:/Users/danie/OneDrive/Documentos/5Âª SEMESTRE FACULTAD/ENSAMBLADORES/AnalisisEnsamblador/src/analisisensamblador/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\12\1\110\2\0\1\12\22\0\1\40\1\2\1\31\1\2"+
    "\1\45\1\2\1\0\1\33\1\21\1\22\2\2\1\13\1\37\1\2"+
    "\1\0\1\34\1\6\7\6\1\53\1\2\1\107\3\0\1\2\1\0"+
    "\1\64\1\16\1\41\1\11\1\55\1\10\1\77\1\35\1\100\1\103"+
    "\1\76\1\32\1\63\1\27\1\66\1\71\1\56\1\65\1\70\1\75"+
    "\1\57\1\46\1\20\1\105\1\101\1\5\4\4\1\1\1\4\1\42"+
    "\1\15\1\61\1\14\1\43\1\3\1\74\1\36\1\50\1\104\1\73"+
    "\1\51\1\60\1\44\1\62\1\24\1\52\1\47\1\67\1\72\1\23"+
    "\1\102\1\17\1\106\1\25\1\54\1\26\1\7\1\30\43\0\1\2"+
    "\35\0\1\2\uff40\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\4\1\1\2\1\1\1\3\14\1\1\2\34\1"+
    "\1\3\2\4\1\0\1\4\3\0\1\4\1\0\1\5"+
    "\1\6\1\7\2\4\2\7\1\5\1\6\3\4\1\7"+
    "\4\4\1\0\3\4\1\0\2\4\1\0\4\4\1\0"+
    "\1\2\2\4\1\0\2\4\1\7\30\4\1\7\2\4"+
    "\1\10\27\4\1\10\1\4\1\11\1\10\1\4\1\10"+
    "\1\11\2\10\1\4\1\11\1\4\1\10\4\4\4\0"+
    "\1\4\1\0\2\4\1\10\5\4\1\0\2\4\1\11"+
    "\3\0\3\4\1\0\1\12\1\0\1\10\1\4\1\11"+
    "\3\4\2\10\7\4\2\10\2\4\1\10\6\4\1\11"+
    "\1\4\2\10\7\4\1\13\1\0\1\14\1\0\2\15"+
    "\7\4\1\2\1\10\1\16\2\0\1\17\1\4\1\10"+
    "\1\17\1\4\1\20\1\0\2\4\1\10\1\0\10\4"+
    "\1\10\2\4\13\0\1\4\2\0\2\4\2\0\3\4"+
    "\1\21\13\0\1\4\4\0\1\4\1\0\1\22\17\0"+
    "\1\23\1\24\22\0\1\4\12\0\1\16\3\0\1\25"+
    "\1\0\1\26\3\0\1\27\4\0\1\30";

  private static int [] zzUnpackAction() {
    int [] result = new int[371];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\111\0\222\0\333\0\u0124\0\u016d\0\u01b6\0\u01ff"+
    "\0\u0248\0\u0291\0\u02da\0\u0323\0\u036c\0\u03b5\0\u03fe\0\u0447"+
    "\0\u0490\0\u04d9\0\u0522\0\u056b\0\u05b4\0\u05fd\0\u0646\0\u068f"+
    "\0\u06d8\0\u0721\0\u076a\0\u07b3\0\u07fc\0\u0845\0\u088e\0\u08d7"+
    "\0\u0920\0\u0969\0\u09b2\0\u09fb\0\u0a44\0\u0a8d\0\u0ad6\0\u0b1f"+
    "\0\u0b68\0\u0bb1\0\u0bfa\0\u0c43\0\u0c8c\0\u0cd5\0\u0d1e\0\u0d67"+
    "\0\u0db0\0\u0df9\0\222\0\333\0\u0124\0\u0e42\0\u0e8b\0\u0ed4"+
    "\0\u0f1d\0\u0f66\0\u0faf\0\333\0\222\0\333\0\u0ff8\0\u1041"+
    "\0\222\0\u108a\0\222\0\333\0\u10d3\0\u111c\0\u1165\0\u11ae"+
    "\0\u11f7\0\u1240\0\u1289\0\u12d2\0\u131b\0\u1364\0\u13ad\0\u13f6"+
    "\0\u143f\0\u1488\0\u14d1\0\u151a\0\u1563\0\u15ac\0\u15f5\0\u163e"+
    "\0\u1687\0\u16d0\0\u1719\0\u1762\0\u17ab\0\u17f4\0\u183d\0\u1886"+
    "\0\u18cf\0\u1918\0\u1961\0\u19aa\0\u19f3\0\u1a3c\0\u1a85\0\u1ace"+
    "\0\u1b17\0\u1b60\0\u09b2\0\u1ba9\0\u1bf2\0\u1c3b\0\u1c84\0\u1ccd"+
    "\0\u1d16\0\u1d5f\0\u1da8\0\u1df1\0\u1e3a\0\u1e83\0\u1ecc\0\u1f15"+
    "\0\u1f5e\0\u1fa7\0\u1ff0\0\333\0\u2039\0\u2082\0\u20cb\0\u2114"+
    "\0\u215d\0\u0ad6\0\u21a6\0\u21ef\0\u2238\0\u2281\0\u22ca\0\u2313"+
    "\0\u235c\0\u23a5\0\u23ee\0\u2437\0\u2480\0\u24c9\0\u2512\0\u255b"+
    "\0\u25a4\0\u25ed\0\u2636\0\u267f\0\u26c8\0\u267f\0\u2711\0\u275a"+
    "\0\u27a3\0\333\0\u27ec\0\u2835\0\u287e\0\u27ec\0\u28c7\0\u2910"+
    "\0\u2959\0\u29a2\0\u29eb\0\u2a34\0\u2a7d\0\u2ac6\0\u2b0f\0\u2b58"+
    "\0\u2ba1\0\u2bea\0\u2c33\0\u2c7c\0\222\0\u2cc5\0\u2d0e\0\u2d57"+
    "\0\u2da0\0\u2de9\0\u2e32\0\u2e7b\0\u2ec4\0\u2f0d\0\u2f56\0\u2f9f"+
    "\0\u2fe8\0\u3031\0\u307a\0\u30c3\0\u310c\0\111\0\u3155\0\u307a"+
    "\0\u319e\0\222\0\u31e7\0\u3230\0\u11ae\0\u3279\0\u32c2\0\u330b"+
    "\0\u3354\0\u339d\0\u33e6\0\u342f\0\u3478\0\u34c1\0\u350a\0\u339d"+
    "\0\u3553\0\u359c\0\u35e5\0\u362e\0\u3677\0\u36c0\0\u3709\0\u3752"+
    "\0\u379b\0\u37e4\0\u108a\0\u382d\0\u3876\0\u38bf\0\u3908\0\u3951"+
    "\0\u399a\0\u39e3\0\u3a2c\0\u3a75\0\u3abe\0\u3b07\0\u3b50\0\u3b99"+
    "\0\u3be2\0\u3c2b\0\u3c74\0\u3cbd\0\u3d06\0\u3d4f\0\u3d98\0\u3de1"+
    "\0\u3e2a\0\111\0\u2f0d\0\333\0\u3e73\0\u3ebc\0\u2f9f\0\u3f05"+
    "\0\u3f4e\0\111\0\u3f97\0\333\0\u3fe0\0\u4029\0\u4072\0\u40bb"+
    "\0\u4104\0\u414d\0\u4196\0\u41df\0\u4228\0\u4271\0\u42ba\0\u4303"+
    "\0\u434c\0\u37e4\0\u4395\0\u43de\0\u4427\0\u4470\0\u44b9\0\u4502"+
    "\0\u454b\0\u4594\0\u45dd\0\u4626\0\u466f\0\u46b8\0\u4701\0\u474a"+
    "\0\u4793\0\u47dc\0\u4825\0\u486e\0\u48b7\0\u4900\0\u4949\0\u4992"+
    "\0\u49db\0\111\0\u4a24\0\u4a6d\0\u4ab6\0\u4aff\0\u4b48\0\u4b91"+
    "\0\u4bda\0\u4c23\0\u4c6c\0\u4cb5\0\u4cfe\0\u4d47\0\u4d90\0\u4dd9"+
    "\0\u4e22\0\u4e6b\0\u4eb4\0\u4efd\0\u4f46\0\u4f8f\0\u4fd8\0\u5021"+
    "\0\u506a\0\u50b3\0\u50fc\0\u5145\0\u518e\0\u51d7\0\u5220\0\u5269"+
    "\0\u52b2\0\u52fb\0\u5344\0\u538d\0\111\0\111\0\u53d6\0\u541f"+
    "\0\u5468\0\u54b1\0\u54fa\0\u5543\0\u558c\0\u55d5\0\u561e\0\u5667"+
    "\0\u56b0\0\u56f9\0\u5742\0\u578b\0\u57d4\0\u581d\0\u5866\0\u58af"+
    "\0\111\0\u58f8\0\u5941\0\u598a\0\u59d3\0\u5a1c\0\u5a65\0\u5aae"+
    "\0\u5af7\0\u5b40\0\u5b89\0\111\0\u5bd2\0\u5c1b\0\u5c64\0\111"+
    "\0\u5cad\0\111\0\u5cf6\0\u5d3f\0\u5d88\0\111\0\u5dd1\0\u5e1a"+
    "\0\u5e63\0\u5eac\0\111";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[371];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\2\1\4\1\5\1\3\1\6\1\2"+
    "\1\4\1\7\2\10\1\11\1\12\1\13\1\14\1\15"+
    "\1\16\1\2\1\3\1\17\1\4\1\20\1\21\1\2"+
    "\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\10"+
    "\1\31\1\32\1\33\1\34\1\2\1\3\1\35\1\36"+
    "\1\37\1\4\1\6\1\4\1\40\2\3\1\41\1\42"+
    "\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52"+
    "\1\53\2\4\1\54\2\4\1\55\1\3\1\4\1\56"+
    "\1\57\1\60\1\61\1\62\1\10\112\0\1\63\1\0"+
    "\1\64\1\65\1\63\1\66\1\0\1\64\1\63\2\0"+
    "\2\63\2\64\1\63\1\67\1\0\2\63\1\64\1\70"+
    "\1\64\1\0\1\71\1\64\1\0\1\72\2\64\2\0"+
    "\1\64\1\63\2\64\1\0\1\63\4\64\1\66\2\64"+
    "\2\63\1\64\1\63\3\64\1\63\2\64\2\63\3\64"+
    "\1\63\3\64\1\63\3\64\1\63\1\64\3\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\5\64\2\0\3\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\4\64\1\0\5\64\1\66\33\64"+
    "\3\0\1\65\2\0\2\65\3\0\1\65\2\0\2\65"+
    "\2\0\1\65\1\67\1\0\2\65\1\0\1\70\2\0"+
    "\1\71\2\0\1\73\5\0\1\65\3\0\1\65\7\0"+
    "\2\65\1\0\1\65\3\0\1\65\2\0\2\65\3\0"+
    "\1\65\3\0\1\65\3\0\1\65\11\0\1\6\25\0"+
    "\1\6\16\0\1\6\36\0\1\63\1\0\1\64\1\65"+
    "\1\63\1\66\1\0\1\64\1\63\2\0\2\63\1\74"+
    "\1\64\1\75\1\67\1\0\2\63\1\64\1\70\1\64"+
    "\1\0\1\71\1\76\1\0\1\72\1\76\1\64\2\0"+
    "\1\64\1\63\2\64\1\0\1\63\4\64\1\66\1\64"+
    "\1\77\2\63\1\64\1\63\2\64\1\100\1\63\2\64"+
    "\1\101\1\63\3\64\1\63\2\64\1\102\1\63\3\64"+
    "\1\101\1\64\14\0\2\10\24\0\1\10\47\0\1\10"+
    "\1\0\1\63\1\0\1\64\1\65\1\63\1\66\1\0"+
    "\1\64\1\63\2\0\1\63\1\103\1\64\1\104\1\63"+
    "\1\67\1\0\1\105\1\63\1\64\1\70\1\64\1\0"+
    "\1\71\1\64\1\0\1\72\1\64\1\76\2\0\1\64"+
    "\1\106\1\107\1\64\1\0\1\63\1\64\1\110\1\76"+
    "\1\64\1\66\2\64\2\63\1\64\1\63\3\64\1\63"+
    "\1\64\1\76\2\63\3\64\1\63\3\64\1\63\3\64"+
    "\1\63\1\76\3\0\1\63\1\0\1\64\1\65\1\63"+
    "\1\66\1\0\1\64\1\63\2\0\2\63\2\64\1\63"+
    "\1\67\1\0\1\63\1\101\1\111\1\70\1\64\1\0"+
    "\1\71\1\64\1\0\1\72\1\64\1\76\2\0\1\64"+
    "\1\63\2\64\1\0\1\63\2\64\1\76\1\64\1\66"+
    "\2\64\2\63\1\64\1\63\3\64\1\63\2\64\2\63"+
    "\3\64\1\63\3\64\1\63\3\64\1\63\1\76\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\2\64"+
    "\2\0\5\64\2\0\3\64\1\0\1\64\2\0\1\76"+
    "\1\0\1\66\1\76\1\64\2\0\4\64\1\0\5\64"+
    "\1\66\15\64\1\76\7\64\1\112\3\64\1\76\1\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\6\64\1\113\24\64\3\0\1\63\1\0\1\64"+
    "\1\65\1\63\1\66\1\0\1\64\1\63\2\0\2\63"+
    "\2\64\1\63\1\67\1\0\2\63\1\64\1\70\1\64"+
    "\1\0\1\71\1\64\1\0\1\72\2\64\2\0\1\64"+
    "\1\63\2\64\1\0\1\63\4\64\1\66\2\64\2\63"+
    "\1\64\1\63\3\64\1\63\1\114\1\64\2\63\3\64"+
    "\1\63\3\64\1\63\3\64\1\63\1\64\41\0\1\115"+
    "\52\0\1\63\1\0\1\64\1\65\1\63\1\66\1\0"+
    "\1\64\1\63\2\0\2\63\2\64\1\63\1\67\1\0"+
    "\1\116\1\63\1\64\1\70\1\64\1\0\1\71\1\64"+
    "\1\0\1\72\2\64\2\0\1\64\1\63\2\64\1\0"+
    "\1\63\1\117\3\64\1\66\2\64\2\63\1\64\1\63"+
    "\1\120\2\64\1\63\2\64\2\63\3\64\1\63\3\64"+
    "\1\63\3\64\1\63\1\64\50\0\1\121\43\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\5\64\2\0\3\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\4\64\1\0\5\64\1\66\1\64"+
    "\1\122\10\64\1\123\20\64\4\0\2\124\1\0\1\124"+
    "\2\0\2\124\1\0\13\124\1\0\1\124\2\0\1\124"+
    "\2\0\16\124\1\0\34\124\2\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\1\64\1\125\2\0\5\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\4\64\1\0\5\64\1\66\1\64\1\126"+
    "\6\64\1\127\1\64\1\130\20\64\4\0\2\131\1\0"+
    "\1\131\2\0\2\131\1\0\13\131\1\0\1\131\2\0"+
    "\1\131\2\0\16\131\1\0\34\131\7\0\1\132\25\0"+
    "\1\132\16\0\1\132\36\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\2\64\2\0\5\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\133\1\0\1\66\2\64\2\0"+
    "\4\64\1\0\5\64\1\66\33\64\3\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\5\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\4\64\1\0\5\64\1\66\16\64\1\134"+
    "\14\64\36\0\1\135\55\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\2\64\2\0\2\64\1\136\1\64"+
    "\1\137\2\0\3\64\1\0\1\64\2\0\1\140\1\0"+
    "\1\66\1\76\1\64\2\0\4\64\1\0\5\64\1\66"+
    "\7\64\1\141\2\64\1\142\1\64\1\76\14\64\1\76"+
    "\1\64\3\0\1\63\1\0\1\64\1\65\1\63\1\66"+
    "\1\0\1\64\1\63\2\0\1\143\1\63\2\64\1\63"+
    "\1\67\1\0\2\63\1\64\1\70\1\64\1\0\1\71"+
    "\1\64\1\0\1\72\1\64\1\76\2\0\1\64\1\144"+
    "\1\64\1\145\1\0\1\63\2\64\1\76\1\64\1\66"+
    "\2\64\2\63\1\64\1\63\3\64\1\63\2\64\2\63"+
    "\3\64\1\63\3\64\1\63\3\64\1\63\1\76\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\2\64"+
    "\2\0\5\64\2\0\3\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\2\0\3\64\1\146\1\0\4\64"+
    "\1\147\1\66\13\64\1\76\17\64\3\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\5\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\2\64\1\150\1\64\1\0\5\64\1\66"+
    "\6\64\1\151\24\64\3\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\2\64\2\0\5\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\2\64\1\152\1\64\1\0\5\64\1\66\5\64\1\134"+
    "\1\153\24\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\1\154\4\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\3\64\1\155\1\0\1\64\1\156\3\64\1\66\4\64"+
    "\1\157\26\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\1\160\4\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\1\64\1\161\1\162\1\64\1\0\5\64\1\66\6\64"+
    "\1\163\24\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\5\64\2\0\3\64\1\0"+
    "\1\164\2\0\1\64\1\0\1\66\2\64\2\0\4\64"+
    "\1\0\5\64\1\66\2\64\1\165\11\64\1\76\16\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\1\134\2\64\1\0\1\64"+
    "\2\0\1\64\1\0\1\66\2\64\2\0\1\64\1\166"+
    "\2\64\1\0\5\64\1\66\6\64\1\167\24\64\3\0"+
    "\1\63\1\0\1\64\1\65\1\63\1\66\1\0\1\64"+
    "\1\63\2\0\1\63\1\170\1\64\1\145\1\63\1\67"+
    "\1\0\2\63\1\64\1\70\1\64\1\0\1\71\1\64"+
    "\1\0\1\72\1\64\1\76\2\0\1\64\1\63\2\64"+
    "\1\0\1\63\2\64\1\171\1\64\1\66\2\64\2\63"+
    "\1\172\1\63\1\173\2\64\1\63\1\64\1\76\2\63"+
    "\3\64\1\63\3\64\1\63\3\64\1\63\1\76\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\2\64"+
    "\2\0\5\64\2\0\3\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\2\0\4\64\1\0\1\64\1\174"+
    "\3\64\1\66\33\64\3\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\2\64\2\0\5\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\4\64\1\0\5\64\1\66\3\64\1\175\4\64\1\176"+
    "\1\64\1\177\20\64\3\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\1\64\1\200\2\0\5\64\2\0"+
    "\3\64\1\0\1\137\2\0\1\76\1\0\1\66\1\76"+
    "\1\64\2\0\4\64\1\0\5\64\1\66\10\64\1\201"+
    "\20\64\1\76\1\64\3\0\1\63\1\0\1\64\1\65"+
    "\1\63\1\66\1\0\1\64\1\63\2\0\2\63\2\64"+
    "\1\63\1\67\1\0\2\63\1\64\1\70\1\64\1\0"+
    "\1\71\1\64\1\0\1\72\2\64\2\0\1\175\1\63"+
    "\2\64\1\0\1\63\4\64\1\66\1\64\1\133\2\63"+
    "\1\64\1\63\3\64\1\63\1\202\1\64\2\63\3\64"+
    "\1\63\3\64\1\63\3\64\1\63\1\64\3\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\5\64\2\0\3\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\4\64\1\0\5\64\1\66\11\64"+
    "\1\174\21\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\5\64\2\0\1\203\1\76"+
    "\1\64\1\0\1\64\2\0\1\64\1\0\1\66\1\64"+
    "\1\204\2\0\1\64\1\153\2\64\1\0\2\64\1\76"+
    "\2\64\1\66\5\64\1\205\5\64\1\76\2\64\1\206"+
    "\14\64\3\0\1\63\1\0\1\64\1\65\1\63\1\66"+
    "\1\0\1\64\1\63\2\0\2\63\2\64\1\63\1\67"+
    "\1\0\2\63\1\64\1\70\1\64\1\0\1\71\1\64"+
    "\1\0\1\72\1\207\1\64\2\0\1\210\1\63\2\64"+
    "\1\0\1\63\4\64\1\66\2\64\1\63\1\211\1\64"+
    "\1\63\2\64\1\202\1\63\2\64\2\101\3\64\1\212"+
    "\2\64\1\76\1\63\3\64\1\63\1\64\3\0\1\63"+
    "\1\0\1\64\1\65\1\63\1\66\1\0\1\64\1\63"+
    "\2\0\2\63\2\64\1\63\1\67\1\0\2\63\1\64"+
    "\1\70\1\64\1\0\1\71\1\64\1\0\1\72\2\64"+
    "\2\0\1\64\1\63\2\64\1\0\1\63\4\64\1\66"+
    "\2\64\1\63\1\213\1\64\1\63\3\64\1\214\1\215"+
    "\1\64\2\63\3\64\1\63\3\64\1\63\3\64\1\63"+
    "\1\64\3\0\1\64\1\0\1\64\1\0\1\64\1\66"+
    "\1\0\2\64\2\0\5\64\2\0\3\64\1\0\1\64"+
    "\2\0\1\64\1\0\1\66\2\64\2\0\2\64\1\216"+
    "\1\64\1\0\5\64\1\66\33\64\3\0\1\63\1\0"+
    "\1\64\1\65\1\63\1\66\1\0\1\64\1\63\2\0"+
    "\2\63\2\64\1\63\1\67\1\0\2\63\1\64\1\70"+
    "\1\64\1\0\1\71\1\64\1\0\1\72\2\64\2\0"+
    "\1\64\1\63\2\64\1\0\1\63\4\64\1\66\1\64"+
    "\1\217\2\63\1\64\1\63\3\64\1\63\2\64\2\63"+
    "\3\64\1\63\3\64\1\63\3\64\1\63\1\64\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\1\64"+
    "\1\220\2\0\5\64\2\0\3\64\1\0\1\221\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\7\64\1\222\1\64\1\223\21\64\3\0\1\64"+
    "\1\0\1\64\1\0\1\174\1\66\1\0\2\64\2\0"+
    "\2\64\1\224\2\64\2\0\3\64\1\0\1\225\2\0"+
    "\1\226\1\0\1\66\2\64\2\0\1\227\3\64\1\0"+
    "\5\64\1\66\1\64\1\174\5\64\1\230\1\231\1\64"+
    "\1\174\1\64\1\232\1\174\5\64\1\224\7\64\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\2\64"+
    "\2\0\1\64\1\233\3\64\2\0\1\64\1\174\1\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\1\64\1\234\1\174\1\235\1\0\3\64\1\236\1\64"+
    "\1\66\1\174\3\64\1\237\1\240\1\174\4\64\1\232"+
    "\4\64\1\233\12\64\3\0\1\63\1\0\1\64\1\65"+
    "\1\63\1\66\1\0\1\64\1\63\2\0\2\63\2\64"+
    "\1\63\1\67\1\0\2\63\1\64\1\70\1\64\1\0"+
    "\1\71\1\241\1\0\1\72\2\64\2\0\1\242\1\63"+
    "\2\64\1\0\1\63\4\64\1\66\2\64\2\63\1\64"+
    "\1\63\3\64\1\63\1\202\1\64\2\63\3\64\1\63"+
    "\3\64\1\63\3\64\1\63\1\64\3\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\5\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\4\64\1\0\3\64\1\243\1\64\1\66"+
    "\5\64\1\244\1\153\24\64\2\0\110\62\7\0\1\66"+
    "\25\0\1\66\16\0\1\66\43\0\1\245\24\0\1\246"+
    "\1\245\16\0\1\245\64\0\1\247\107\0\1\250\70\0"+
    "\1\251\25\0\1\251\16\0\1\251\43\0\1\252\25\0"+
    "\1\252\16\0\1\252\36\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\2\64\2\0\5\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\1\174\3\64\1\0\5\64\1\66\33\64\3\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\5\64\2\0\3\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\4\64\1\0\5\64\1\66\10\64"+
    "\1\174\3\64\1\174\4\64\1\253\11\64\3\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\5\64\2\0\3\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\4\64\1\0\1\232\4\64\1\66"+
    "\33\64\3\0\1\63\1\0\1\64\1\65\1\63\1\66"+
    "\1\0\1\64\1\63\2\0\2\63\2\64\1\63\1\67"+
    "\1\0\1\63\1\254\1\64\1\70\1\64\1\0\1\71"+
    "\1\64\1\0\1\72\2\64\2\0\1\64\1\63\2\64"+
    "\1\0\1\63\4\64\1\66\2\64\2\63\1\64\1\63"+
    "\3\64\1\63\2\64\2\63\3\64\1\63\3\64\1\63"+
    "\3\64\1\63\1\64\3\0\1\63\1\0\1\64\1\65"+
    "\1\63\1\66\1\0\1\64\1\63\2\0\2\63\2\64"+
    "\1\63\1\67\1\0\2\63\1\64\1\70\1\64\1\0"+
    "\1\71\1\64\1\0\1\72\2\64\2\0\1\64\1\255"+
    "\2\64\1\0\1\63\4\64\1\66\2\64\2\63\1\64"+
    "\1\63\3\64\1\63\1\64\1\174\2\63\1\256\2\64"+
    "\1\63\3\64\1\63\3\64\1\63\1\64\3\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\5\64\2\0\3\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\4\64\1\0\5\64\1\66\5\64"+
    "\1\174\25\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\5\64\2\0\3\64\1\0"+
    "\1\64\2\0\1\64\1\0\1\66\2\64\2\0\4\64"+
    "\1\0\5\64\1\66\26\64\1\232\4\64\3\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\5\64\2\0\3\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\4\64\1\0\5\64\1\66\16\64"+
    "\1\257\14\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\5\64\2\0\3\64\1\0"+
    "\1\64\2\0\1\64\1\0\1\66\2\64\2\0\4\64"+
    "\1\0\5\64\1\66\21\64\1\260\11\64\3\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\5\64\2\0\3\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\4\64\1\0\1\64\1\261\3\64"+
    "\1\66\33\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\5\64\2\0\3\64\1\0"+
    "\1\64\2\0\1\64\1\0\1\66\2\64\2\0\4\64"+
    "\1\0\5\64\1\66\11\64\1\262\21\64\10\0\1\263"+
    "\25\0\1\263\16\0\1\263\36\0\1\63\1\0\1\64"+
    "\1\65\1\63\1\66\1\0\1\64\1\63\2\0\2\63"+
    "\2\64\1\63\1\67\1\0\2\63\1\64\1\70\1\64"+
    "\1\0\1\71\1\64\1\0\1\72\2\64\2\0\1\64"+
    "\1\63\2\64\1\0\1\63\4\64\1\66\2\64\2\63"+
    "\1\64\1\63\3\64\1\63\1\64\1\264\2\63\3\64"+
    "\1\63\3\64\1\63\3\64\1\63\1\64\3\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\5\64\2\0\3\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\4\64\1\0\5\64\1\66\6\64"+
    "\1\265\24\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\5\64\2\0\1\64\1\266"+
    "\1\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\5\64\1\66\33\64\44\0\1\267"+
    "\47\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\23\64\1\174\7\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\5\64\1\66\15\64\1\174\3\64"+
    "\1\174\11\64\4\0\2\124\1\0\1\124\2\0\2\124"+
    "\1\0\13\124\1\0\1\124\1\0\1\270\1\124\2\0"+
    "\10\124\1\271\5\124\1\0\34\124\2\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\5\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\4\64\1\0\5\64\1\66\14\64\1\232"+
    "\16\64\3\0\1\64\1\0\1\64\1\0\1\64\1\66"+
    "\1\0\2\64\2\0\5\64\2\0\3\64\1\0\1\64"+
    "\2\0\1\64\1\0\1\66\2\64\2\0\4\64\1\0"+
    "\5\64\1\66\10\64\1\174\3\64\1\174\16\64\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\2\64"+
    "\2\0\5\64\2\0\3\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\1\272\1\64\2\0\4\64\1\0\5\64"+
    "\1\66\33\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\1\64\1\273\2\0\5\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\4\64\1\0\5\64\1\66\12\64\1\274\20\64\4\0"+
    "\2\131\1\0\1\131\2\0\2\131\1\0\13\131\1\0"+
    "\1\131\2\0\1\131\2\0\10\131\1\275\5\131\1\0"+
    "\34\131\7\0\1\132\25\0\1\132\1\276\15\0\1\132"+
    "\36\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\21\64\1\174\11\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\3\64\1\174\1\64\1\66\33\64"+
    "\10\0\1\277\25\0\1\277\16\0\1\277\36\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\4\64\1\174\2\0\3\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\2\0\4\64\1\0\5\64\1\66"+
    "\33\64\3\0\1\64\1\0\1\64\1\0\1\64\1\66"+
    "\1\0\1\64\1\174\2\0\5\64\2\0\3\64\1\0"+
    "\1\64\2\0\1\64\1\0\1\66\2\64\2\0\4\64"+
    "\1\0\5\64\1\66\33\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\1\64\1\232\2\0\5\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\1\174\3\64\1\0\5\64\1\66\24\64"+
    "\1\174\6\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\5\64\2\0\3\64\1\0"+
    "\1\64\2\0\1\64\1\0\1\66\2\64\2\0\1\174"+
    "\3\64\1\0\5\64\1\66\15\64\1\300\15\64\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\1\64"+
    "\1\301\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\33\64\3\0\1\63\1\0\1\64\1\65\1\63"+
    "\1\66\1\0\1\64\1\63\2\0\1\302\1\63\2\64"+
    "\1\63\1\67\1\0\2\63\1\64\1\70\1\64\1\0"+
    "\1\71\1\64\1\0\1\72\2\64\2\0\1\64\1\63"+
    "\2\64\1\0\1\63\4\64\1\66\2\64\2\63\1\64"+
    "\1\255\3\64\1\63\2\64\2\63\3\64\1\63\3\64"+
    "\1\63\3\64\1\63\1\64\3\0\1\63\1\0\1\64"+
    "\1\65\1\63\1\66\1\0\1\64\1\63\2\0\1\255"+
    "\1\63\2\64\1\63\1\67\1\0\2\63\1\64\1\70"+
    "\1\64\1\0\1\71\1\64\1\0\1\72\2\64\2\0"+
    "\1\64\1\255\2\64\1\0\1\63\4\64\1\66\2\64"+
    "\2\63\1\174\1\63\3\64\1\63\1\64\1\174\2\63"+
    "\3\64\1\63\3\64\1\63\3\64\1\63\1\64\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\2\64"+
    "\2\0\1\174\4\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\33\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\1\303\4\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\4\64\1\0\5\64\1\66\33\64\3\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\5\64"+
    "\2\0\1\304\2\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\4\64\1\0\5\64\1\66\33\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\20\64\1\174\12\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\1\64\1\174\1\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\4\64\1\0\5\64\1\66\16\64"+
    "\1\174\14\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\5\64\2\0\3\64\1\0"+
    "\1\64\2\0\1\64\1\0\1\66\2\64\2\0\4\64"+
    "\1\0\5\64\1\66\16\64\1\174\14\64\3\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\5\64\2\0\3\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\4\64\1\0\2\64\1\305\2\64"+
    "\1\66\33\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\5\64\2\0\3\64\1\0"+
    "\1\64\2\0\1\64\1\0\1\66\2\64\2\0\4\64"+
    "\1\0\5\64\1\66\5\64\1\306\10\64\1\307\14\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\2\64\1\310\1\64"+
    "\1\0\5\64\1\66\33\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\1\204\2\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\4\64\1\0\5\64\1\66\33\64\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\2\64"+
    "\2\0\5\64\2\0\3\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\2\0\4\64\1\0\5\64\1\66"+
    "\13\64\1\232\17\64\3\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\2\64\2\0\5\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\1\64\1\311"+
    "\2\0\4\64\1\0\5\64\1\66\33\64\3\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\5\64\2\0\3\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\1\64\1\174\2\64\1\0\5\64"+
    "\1\66\13\64\1\174\17\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\1\312\4\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\4\64\1\0\5\64\1\66\6\64\1\313"+
    "\24\64\3\0\1\64\1\0\1\64\1\0\1\64\1\66"+
    "\1\0\1\64\1\314\2\0\5\64\2\0\3\64\1\0"+
    "\1\64\2\0\1\64\1\0\1\66\2\64\2\0\4\64"+
    "\1\0\5\64\1\66\33\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\5\64\1\66\3\64\1\315\27\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\5\64\1\316\25\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\5\64\1\66\26\64\1\317\4\64"+
    "\3\0\1\63\1\0\1\64\1\65\1\63\1\66\1\0"+
    "\1\64\1\63\2\0\2\63\1\64\1\174\1\63\1\67"+
    "\1\0\2\63\1\64\1\70\1\64\1\0\1\71\1\64"+
    "\1\0\1\72\2\64\2\0\1\64\1\63\2\64\1\0"+
    "\1\63\4\64\1\66\2\64\2\63\1\64\1\63\3\64"+
    "\1\63\2\64\2\63\3\64\1\63\3\64\1\63\3\64"+
    "\1\63\1\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\1\232\4\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\4\64\1\0\2\64\1\174\2\64\1\66\5\64\1\174"+
    "\25\64\3\0\1\64\1\0\1\64\1\0\1\64\1\66"+
    "\1\0\2\64\2\0\5\64\2\0\1\64\1\320\1\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\4\64\1\0\5\64\1\66\5\64\1\174\25\64\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\2\64"+
    "\2\0\1\321\4\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\33\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\5\64\2\0\3\64\1\0"+
    "\1\64\2\0\1\174\1\0\1\66\2\64\2\0\4\64"+
    "\1\0\5\64\1\66\33\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\1\322\3\64\1\0\5\64\1\66\33\64\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\2\64"+
    "\2\0\5\64\2\0\3\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\2\0\4\64\1\0\1\323\4\64"+
    "\1\66\33\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\1\64\1\232\2\0\5\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\1\174\3\64\1\0\5\64\1\66\33\64\3\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\1\64\1\174"+
    "\2\0\5\64\2\0\3\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\2\0\4\64\1\0\5\64\1\66"+
    "\7\64\2\174\3\64\1\174\16\64\3\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\1\64"+
    "\1\174\3\64\2\0\3\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\2\0\4\64\1\0\5\64\1\66"+
    "\33\64\3\0\1\64\1\0\1\64\1\0\1\64\1\66"+
    "\1\0\2\64\2\0\5\64\2\0\3\64\1\0\1\64"+
    "\2\0\1\64\1\0\1\66\2\64\2\0\4\64\1\0"+
    "\3\64\1\232\1\64\1\66\33\64\3\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\5\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\1\64\1\324\2\64\1\0\5\64\1\66"+
    "\33\64\3\0\1\64\1\0\1\64\1\0\1\64\1\66"+
    "\1\0\2\64\2\0\1\232\4\64\2\0\3\64\1\0"+
    "\1\64\2\0\1\64\1\0\1\66\2\64\2\0\1\64"+
    "\1\325\2\64\1\0\2\64\1\174\2\64\1\66\5\64"+
    "\1\174\1\312\24\64\3\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\2\64\2\0\5\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\232\1\0\1\66\2\64\2\0"+
    "\4\64\1\0\5\64\1\66\33\64\3\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\5\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\4\64\1\0\5\64\1\66\10\64\1\326"+
    "\22\64\3\0\1\63\1\0\1\64\1\65\1\63\1\66"+
    "\1\0\1\64\1\63\2\0\2\63\1\174\1\64\1\63"+
    "\1\67\1\0\2\63\1\64\1\70\1\64\1\0\1\71"+
    "\1\64\1\0\1\72\2\64\2\0\1\64\1\63\2\64"+
    "\1\0\1\63\4\64\1\66\2\64\2\63\1\64\1\63"+
    "\3\64\1\63\2\64\2\63\3\64\1\63\3\64\1\63"+
    "\3\64\1\63\1\64\3\0\1\63\1\0\1\64\1\65"+
    "\1\63\1\66\1\0\1\64\1\302\2\0\2\63\2\64"+
    "\1\63\1\67\1\0\2\63\1\64\1\70\1\64\1\0"+
    "\1\71\1\64\1\0\1\72\2\64\2\0\1\174\1\63"+
    "\2\64\1\0\1\63\4\64\1\66\2\64\2\63\1\64"+
    "\1\63\2\64\1\327\1\63\1\273\1\64\2\63\3\64"+
    "\1\63\2\64\1\174\1\63\3\64\1\63\1\64\3\0"+
    "\1\63\1\0\1\64\1\65\1\63\1\66\1\0\1\64"+
    "\1\63\2\0\2\63\2\64\1\63\1\67\1\0\2\63"+
    "\1\64\1\70\1\64\1\0\1\71\1\64\1\0\1\72"+
    "\2\64\2\0\1\64\1\63\2\64\1\0\1\63\4\64"+
    "\1\66\2\64\2\63\1\64\1\63\3\64\1\63\2\64"+
    "\1\330\1\63\3\64\1\63\3\64\1\63\3\64\1\63"+
    "\1\64\3\0\1\63\1\0\1\64\1\65\1\63\1\66"+
    "\1\0\1\64\1\63\2\0\2\63\2\64\1\63\1\67"+
    "\1\0\2\63\1\64\1\70\1\64\1\0\1\71\1\64"+
    "\1\0\1\72\2\64\2\0\1\64\1\63\2\64\1\0"+
    "\1\63\4\64\1\66\2\64\2\63\1\64\1\63\3\64"+
    "\1\63\1\331\1\64\2\63\3\64\1\63\3\64\1\63"+
    "\3\64\1\63\1\64\3\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\2\64\2\0\5\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\4\64\1\0\5\64\1\66\15\64\1\332\15\64\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\2\64"+
    "\2\0\5\64\2\0\3\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\2\0\4\64\1\0\5\64\1\66"+
    "\13\64\1\152\17\64\3\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\2\64\2\0\5\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\4\64\1\0\5\64\1\66\14\64\1\133\16\64\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\2\64"+
    "\2\0\5\64\2\0\3\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\2\0\4\64\1\0\5\64\1\66"+
    "\24\64\1\333\6\64\3\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\2\64\2\0\5\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\1\334\3\64\1\0\5\64\1\66\21\64\1\335\11\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\3\64\1\207\27\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\5\64\1\66\1\64\1\336\31\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\1\64\1\174\31\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\174\1\66\1\0\2\64\2\0\2\64\1\224"+
    "\2\64\2\0\3\64\1\0\1\64\2\0\1\224\1\0"+
    "\1\66\2\64\2\0\1\174\3\64\1\0\5\64\1\66"+
    "\1\64\1\174\6\64\1\224\1\64\1\174\1\64\1\232"+
    "\1\174\5\64\1\174\7\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\5\64\1\66\31\64\1\337\1\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\15\64\1\174\15\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\5\64\1\66\1\64\1\232\31\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\2\64\1\174\1\64"+
    "\1\0\5\64\1\66\33\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\2\64\1\232\1\64\1\0\5\64\1\66\33\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\1\64\1\233\3\64\2\0\1\64\1\174"+
    "\1\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\1\64\1\233\1\174\1\64\1\0\3\64\1\233"+
    "\1\64\1\66\1\174\4\64\2\174\4\64\1\232\4\64"+
    "\1\174\12\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\5\64\2\0\1\64\1\174"+
    "\1\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\5\64\1\66\33\64\3\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\5\64\2\0\3\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\4\64\1\0\5\64\1\66\32\64"+
    "\1\340\3\0\1\64\1\0\1\64\1\0\1\64\1\66"+
    "\1\0\2\64\2\0\5\64\2\0\3\64\1\0\1\64"+
    "\2\0\1\64\1\0\1\66\2\64\2\0\4\64\1\0"+
    "\5\64\1\66\10\64\1\341\22\64\3\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\5\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\1\342\1\64\2\0\4\64\1\0\5\64\1\66\33\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\1\64\1\343\2\64"+
    "\1\0\5\64\1\66\33\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\1\64"+
    "\1\344\2\0\4\64\1\0\5\64\1\66\33\64\10\0"+
    "\1\245\13\0\1\345\11\0\1\245\16\0\1\245\36\0"+
    "\1\346\1\0\1\346\1\0\1\346\2\0\2\346\2\0"+
    "\5\346\2\0\3\346\1\0\1\346\2\0\1\346\2\0"+
    "\2\346\2\0\4\346\1\0\5\346\1\0\33\346\32\0"+
    "\1\347\112\0\1\350\64\0\1\251\25\0\1\251\1\351"+
    "\1\352\14\0\1\251\43\0\1\252\25\0\1\252\1\351"+
    "\1\352\14\0\1\252\36\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\2\64\2\0\5\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\4\64\1\0\5\64\1\66\10\64\1\353\22\64\3\0"+
    "\1\63\1\0\1\64\1\65\1\63\1\66\1\0\1\64"+
    "\1\63\2\0\2\63\2\64\1\63\1\67\1\0\2\63"+
    "\1\354\1\70\1\64\1\0\1\71\1\64\1\0\1\72"+
    "\2\64\2\0\1\64\1\63\2\64\1\0\1\63\4\64"+
    "\1\66\2\64\2\63\1\64\1\63\3\64\1\63\2\64"+
    "\2\63\3\64\1\63\3\64\1\63\3\64\1\63\1\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\1\64\1\355\2\64"+
    "\1\0\5\64\1\66\33\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\2\64\1\356\1\64\1\0\5\64\1\66\33\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\1\64\1\357\31\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\1\360\4\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\4\64\1\0\5\64\1\66\33\64\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\1\64"+
    "\1\361\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\33\64\10\0\1\263\13\0\1\362\11\0\1\263"+
    "\16\0\1\263\36\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\5\64\2\0\3\64\1\0"+
    "\1\64\2\0\1\64\1\0\1\66\1\64\1\363\2\0"+
    "\4\64\1\0\5\64\1\66\33\64\3\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\5\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\4\64\1\0\5\64\1\66\5\64\1\364"+
    "\25\64\3\0\1\64\1\0\1\174\1\0\1\64\1\66"+
    "\1\0\2\64\2\0\5\64\2\0\3\64\1\0\1\64"+
    "\2\0\1\64\1\0\1\66\2\64\2\0\1\64\1\174"+
    "\2\64\1\0\5\64\1\66\33\64\51\0\1\365\63\0"+
    "\1\366\70\0\2\124\1\0\1\124\2\0\2\124\1\0"+
    "\13\124\1\0\1\124\1\0\1\367\1\124\2\0\10\124"+
    "\1\271\5\124\1\0\34\124\2\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\1\174\1\64\2\0\5\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\4\64\1\0\5\64\1\66\33\64\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\2\64"+
    "\2\0\5\64\2\0\3\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\2\0\4\64\1\0\5\64\1\66"+
    "\14\64\1\370\16\64\3\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\2\64\2\0\5\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\4\64\1\0\5\64\1\66\15\64\1\371\15\64\4\0"+
    "\2\131\1\0\1\131\2\0\2\131\1\0\13\131\1\0"+
    "\1\131\2\0\1\131\1\372\1\0\10\131\1\275\5\131"+
    "\1\0\34\131\7\0\1\277\25\0\1\277\1\276\15\0"+
    "\1\277\36\0\1\64\1\0\1\64\1\0\1\64\1\66"+
    "\1\0\2\64\2\0\5\64\2\0\3\64\1\0\1\64"+
    "\2\0\1\64\1\0\1\66\2\64\2\0\4\64\1\0"+
    "\5\64\1\66\1\64\1\373\31\64\3\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\5\64"+
    "\2\0\1\64\1\364\1\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\2\0\4\64\1\0\5\64\1\66"+
    "\4\64\1\364\6\64\1\374\17\64\3\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\5\64"+
    "\1\375\1\0\3\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\4\64\1\0\5\64\1\66\33\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\3\64"+
    "\1\376\1\64\1\66\33\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\5\64\1\66\6\64\1\174\24\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\16\64\1\232\14\64\3\0\1\64\1\0\1\174"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\5\64\1\66\33\64\3\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\5\64\2\0\3\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\4\64\1\0\5\64\1\66\13\64"+
    "\1\377\17\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\5\64\2\0\1\64\1\u0100"+
    "\1\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\5\64\1\66\33\64\3\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\5\64\2\0\3\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\4\64\1\0\5\64\1\66\7\64"+
    "\1\364\4\64\1\374\1\364\15\64\3\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\5\64"+
    "\1\u0101\1\0\3\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\4\64\1\0\5\64\1\66\33\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\1\64"+
    "\1\u0102\3\64\1\66\33\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\5\64\1\66\13\64\1\u0103\17\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\2\64\1\u0104\1\64"+
    "\1\0\5\64\1\66\33\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\5\64\1\66\11\64\1\u0105\21\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\14\64\1\u0106\16\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\5\64\1\66\13\64\1\u0107\17\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\5\64\1\u0108\25\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\5\64\1\66\14\64\1\136\16\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\1\u0109\3\64\1\0"+
    "\5\64\1\66\33\64\3\0\1\63\1\0\1\64\1\65"+
    "\1\63\1\66\1\0\1\64\1\63\2\0\2\63\2\64"+
    "\1\63\1\67\1\0\2\63\1\64\1\70\1\64\1\0"+
    "\1\71\1\64\1\0\1\72\1\u010a\1\64\2\0\1\64"+
    "\1\63\2\64\1\0\1\63\4\64\1\66\2\64\2\63"+
    "\1\64\1\63\3\64\1\63\2\64\2\63\3\64\1\63"+
    "\3\64\1\63\3\64\1\63\1\64\3\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\5\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\1\364\3\64\1\0\5\64\1\66\33\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\1\174\1\64\2\0\5\64\2\0\3\64\1\0\1\64"+
    "\2\0\1\64\1\0\1\66\2\64\2\0\4\64\1\0"+
    "\5\64\1\66\10\64\1\174\22\64\3\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\5\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\u010b\1\0\1\66"+
    "\2\64\2\0\4\64\1\0\5\64\1\66\33\64\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\2\64"+
    "\2\0\5\64\2\0\3\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\2\0\4\64\1\0\5\64\1\66"+
    "\12\64\1\174\20\64\3\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\2\64\2\0\5\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\4\64\1\0\5\64\1\66\21\64\1\232\11\64\3\0"+
    "\1\64\1\0\1\64\1\0\1\232\1\66\1\0\2\64"+
    "\2\0\5\64\2\0\3\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\2\0\4\64\1\0\5\64\1\66"+
    "\33\64\3\0\1\64\1\0\1\64\1\0\1\64\1\66"+
    "\1\0\2\64\2\0\5\64\2\0\3\64\1\0\1\64"+
    "\2\0\1\64\1\0\1\66\2\64\2\0\4\64\1\0"+
    "\5\64\1\66\1\232\32\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\5\64\1\66\21\64\1\u010c\11\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\23\64\1\232\7\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\5\64\1\66\16\64\1\203\14\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\2\0\4\64\1\0\5\64"+
    "\1\66\20\64\1\232\12\64\24\0\1\345\67\0\1\346"+
    "\1\0\1\346\1\0\1\346\2\0\2\346\2\0\5\346"+
    "\2\0\3\346\1\0\1\346\2\0\1\346\1\u010d\1\0"+
    "\2\346\2\0\4\346\1\0\5\346\1\0\33\346\30\0"+
    "\1\70\112\0\1\u010e\115\0\1\351\111\0\1\352\53\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\2\64"+
    "\2\0\5\64\2\0\3\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\1\0\1\u010f\4\64\1\0\5\64"+
    "\1\66\33\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\5\64\1\u0110\1\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\4\64\1\0\5\64\1\66\33\64\3\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\5\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\1\0\1\u0111\4\64\1\0\5\64\1\66\33\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\1\0\1\u0112\4\64\1\0"+
    "\5\64\1\66\33\64\3\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\2\64\2\0\5\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\1\0"+
    "\1\u0113\4\64\1\0\5\64\1\66\33\64\3\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\5\64\2\0\3\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\1\0\1\u0114\4\64\1\0\5\64\1\66"+
    "\33\64\3\0\1\64\1\0\1\64\1\0\1\64\1\66"+
    "\1\0\2\64\2\0\5\64\2\0\3\64\1\0\1\64"+
    "\2\0\1\64\1\0\1\66\2\64\1\0\1\u0115\4\64"+
    "\1\0\5\64\1\66\33\64\52\0\1\u0116\100\0\1\u0117"+
    "\51\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\2\64\1\174\1\64\1\174\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\4\64\1\0\5\64\1\66\33\64\3\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\5\64"+
    "\2\0\3\64\1\0\1\u0118\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\4\64\1\0\5\64\1\66\1\64\1\174"+
    "\31\64\3\0\1\64\1\0\1\64\1\0\1\64\1\66"+
    "\1\0\2\64\2\0\5\64\2\0\3\64\1\0\1\64"+
    "\2\0\1\64\1\0\1\66\2\64\1\0\1\u0119\4\64"+
    "\1\0\5\64\1\66\33\64\36\0\1\u011a\55\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\5\64\2\0\1\u011b\2\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\2\0\4\64\1\0\5\64\1\66"+
    "\33\64\3\0\1\64\1\0\1\64\1\0\1\64\1\66"+
    "\1\0\2\64\2\0\1\64\1\174\1\64\1\174\1\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\4\64\1\0\5\64\1\66\33\64\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\2\64"+
    "\2\0\5\64\2\0\3\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\2\0\2\64\1\174\1\u011c\1\0"+
    "\5\64\1\66\33\64\36\0\1\u011d\55\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\5\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\4\64\1\0\5\64\1\66\6\64\1\364"+
    "\24\64\3\0\1\64\1\0\1\64\1\0\1\64\1\66"+
    "\1\0\2\64\2\0\1\64\1\174\1\64\1\232\1\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\4\64\1\0\5\64\1\66\33\64\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\2\64"+
    "\2\0\5\64\2\0\3\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\1\0\1\u011e\4\64\1\0\5\64"+
    "\1\66\33\64\3\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\5\64\2\0\3\64\1\0"+
    "\1\64\2\0\1\64\1\0\1\66\2\64\2\0\4\64"+
    "\1\0\5\64\1\66\12\64\1\364\20\64\3\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\2\64\1\174\1\64\1\232\2\0\3\64\1\0\1\64"+
    "\2\0\1\64\1\0\1\66\2\64\2\0\4\64\1\0"+
    "\5\64\1\66\33\64\3\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\2\64\2\0\3\64\1\174\1\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\4\64\1\0\5\64\1\66\33\64\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\2\64"+
    "\2\0\5\64\2\0\3\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\2\0\4\64\1\0\5\64\1\66"+
    "\17\64\1\u011f\13\64\3\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\2\64\2\0\5\64\2\0\3\64"+
    "\1\0\1\64\2\0\1\64\1\0\1\66\2\64\2\0"+
    "\4\64\1\0\5\64\1\66\22\64\1\u0120\10\64\3\0"+
    "\1\64\1\0\1\64\1\0\1\64\1\66\1\0\2\64"+
    "\2\0\5\64\2\0\3\64\1\0\1\64\2\0\1\64"+
    "\1\0\1\66\2\64\2\0\4\64\1\0\5\64\1\66"+
    "\3\64\1\u0121\27\64\3\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\2\64\2\0\2\64\1\174\2\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\2\0\4\64\1\0\5\64\1\66\33\64\24\0"+
    "\1\u0122\117\0\1\u0122\147\0\1\u0123\26\0\1\u0124\25\0"+
    "\1\u0124\16\0\1\u0124\124\0\1\u0125\45\0\1\u0126\155\0"+
    "\1\u0127\43\0\1\u0128\155\0\1\u0129\61\0\1\u012a\55\0"+
    "\1\u012b\102\0\1\64\1\0\1\64\1\0\1\174\1\66"+
    "\1\0\2\64\2\0\5\64\2\0\3\64\1\0\1\64"+
    "\2\0\1\64\1\0\1\66\2\64\2\0\4\64\1\0"+
    "\5\64\1\66\1\64\1\232\31\64\72\0\1\u012c\57\0"+
    "\1\u012d\52\0\1\64\1\0\1\64\1\0\1\64\1\66"+
    "\1\0\2\64\2\0\1\u012e\4\64\2\0\3\64\1\0"+
    "\1\64\2\0\1\64\1\0\1\66\2\64\2\0\4\64"+
    "\1\0\5\64\1\66\33\64\3\0\1\64\1\0\1\64"+
    "\1\0\1\64\1\66\1\0\2\64\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\2\64\1\232\1\64\1\0\5\64\1\66\1\174"+
    "\32\64\41\0\1\u012f\140\0\1\u0130\22\0\1\64\1\0"+
    "\1\64\1\0\1\64\1\66\1\0\2\64\2\0\5\64"+
    "\2\0\3\64\1\0\1\64\2\0\1\64\1\0\1\66"+
    "\2\64\1\0\1\u0131\4\64\1\0\5\64\1\66\33\64"+
    "\3\0\1\64\1\0\1\64\1\0\1\64\1\66\1\0"+
    "\2\64\2\0\5\64\2\0\3\64\1\0\1\64\2\0"+
    "\1\64\1\0\1\66\2\64\1\0\1\u0132\4\64\1\0"+
    "\5\64\1\66\33\64\3\0\1\64\1\0\1\64\1\0"+
    "\1\64\1\66\1\0\1\64\1\u0133\2\0\5\64\2\0"+
    "\3\64\1\0\1\64\2\0\1\64\1\0\1\66\2\64"+
    "\2\0\4\64\1\0\5\64\1\66\33\64\57\0\1\u0134"+
    "\41\0\1\u0124\13\0\1\u0135\11\0\1\u0124\16\0\1\u0124"+
    "\100\0\1\u0136\137\0\1\u0137\113\0\1\u0138\105\0\1\u0139"+
    "\113\0\1\u013a\30\0\1\u013b\133\0\1\u013c\125\0\1\u013d"+
    "\106\0\1\u013e\36\0\1\64\1\0\1\64\1\0\1\64"+
    "\1\66\1\0\2\64\2\0\5\64\2\0\3\64\1\0"+
    "\1\64\2\0\1\64\1\0\1\66\2\64\2\0\2\64"+
    "\1\364\1\64\1\0\5\64\1\66\33\64\55\0\1\u013f"+
    "\100\0\1\u0140\134\0\1\u0141\111\0\1\u0142\21\0\1\64"+
    "\1\0\1\64\1\0\1\64\1\66\1\0\2\64\2\0"+
    "\5\64\2\0\3\64\1\0\1\64\2\0\1\64\1\0"+
    "\1\66\2\64\2\0\4\64\1\0\5\64\1\66\1\64"+
    "\1\364\31\64\101\0\1\u0143\33\0\1\u0135\162\0\1\u0144"+
    "\63\0\1\u0145\126\0\1\u0145\72\0\1\u0146\126\0\1\u0146"+
    "\74\0\1\u0147\60\0\1\u0148\166\0\1\u0149\53\0\1\u014a"+
    "\55\0\1\u013e\175\0\1\u014b\57\0\1\u014c\122\0\1\u014d"+
    "\116\0\1\u014e\105\0\1\u014f\73\0\1\u0150\100\0\1\u0151"+
    "\140\0\1\u0152\64\0\1\u0153\131\0\1\u0154\124\0\1\u0155"+
    "\113\0\1\u0156\66\0\1\u0157\76\0\1\u0158\75\0\1\u0159"+
    "\106\0\1\u015a\137\0\1\u015b\107\0\1\u015c\77\0\1\u015d"+
    "\125\0\1\u015e\113\0\1\u015f\54\0\1\u0160\125\0\1\u0161"+
    "\105\0\1\u0162\76\0\1\u0163\103\0\1\u0164\132\0\1\u0165"+
    "\107\0\1\u0166\122\0\1\u0167\130\0\1\u0168\105\0\1\u0168"+
    "\60\0\1\u0169\143\0\1\u016a\105\0\1\u016a\62\0\1\u016b"+
    "\73\0\1\u016c\75\0\1\u016d\166\0\1\u016e\113\0\1\u016e"+
    "\56\0\1\u016f\111\0\1\u0170\106\0\1\u0171\76\0\1\u0172"+
    "\113\0\1\u0173\55\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[24309];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\62\1\1\0\1\1\3\0\1\1\1\0"+
    "\21\1\1\0\3\1\1\0\2\1\1\0\4\1\1\0"+
    "\3\1\1\0\107\1\4\0\1\1\1\0\10\1\1\0"+
    "\3\1\3\0\3\1\1\0\1\11\1\0\46\1\1\0"+
    "\1\1\1\0\11\1\1\11\2\1\2\0\3\1\1\11"+
    "\2\1\1\0\3\1\1\0\13\1\13\0\1\1\2\0"+
    "\2\1\2\0\3\1\1\11\13\0\1\1\4\0\1\1"+
    "\1\0\1\1\17\0\2\11\22\0\1\11\12\0\1\11"+
    "\3\0\1\11\1\0\1\11\3\0\1\11\4\0\1\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[371];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    public String lexeme;


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  Lexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 186) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 17: 
          { lexeme=yytext(); return Pseudoinstruccion_Dup_Caracter;
          }
        case 25: break;
        case 21: 
          { lexeme=yytext(); return Pseudoinstruccion_D_S;
          }
        case 26: break;
        case 10: 
          { lexeme=yytext(); return Constante_Numerica_H;
          }
        case 27: break;
        case 12: 
          { lexeme=yytext(); return Pseudoinstruccion_Dup_D;
          }
        case 28: break;
        case 5: 
          { lexeme=yytext(); return Pseudoinstruccion_D_B;
          }
        case 29: break;
        case 23: 
          { lexeme=yytext(); return Pseudoinstruccion_S_S;
          }
        case 30: break;
        case 18: 
          { lexeme=yytext(); return PseudoInsInco;
          }
        case 31: break;
        case 4: 
          { lexeme=yytext(); return Variable;
          }
        case 32: break;
        case 6: 
          { lexeme=yytext(); return Pseudoinstruccion_D_W;
          }
        case 33: break;
        case 11: 
          { lexeme=yytext(); return Pseudoinstruccion_Dup_0;
          }
        case 34: break;
        case 8: 
          { lexeme=yytext(); return Simbolo;
          }
        case 35: break;
        case 13: 
          { lexeme=yytext(); return Pseudoinstruccion_Dup_H;
          }
        case 36: break;
        case 7: 
          { lexeme=yytext(); return Registro;
          }
        case 37: break;
        case 19: 
          { lexeme=yytext(); return Pseudoinstruccion_B;
          }
        case 38: break;
        case 15: 
          { lexeme=yytext(); return Constante_Caracter_CD;
          }
        case 39: break;
        case 16: 
          { lexeme=yytext(); return Pseudoinstruccion_E;
          }
        case 40: break;
        case 14: 
          { lexeme=yytext(); return Pseudoinstruccion;
          }
        case 41: break;
        case 2: 
          { lexeme=yytext(); return Constante_Numerica_D;
          }
        case 42: break;
        case 1: 
          { return ERROR;
          }
        case 43: break;
        case 24: 
          { lexeme=yytext(); return Constante_Caracter_CS;
          }
        case 44: break;
        case 3: 
          { /*Ignore*/
          }
        case 45: break;
        case 20: 
          { lexeme=yytext(); return Pseudoinstruccion_W;
          }
        case 46: break;
        case 22: 
          { lexeme=yytext(); return Pseudoinstruccion_C_S;
          }
        case 47: break;
        case 9: 
          { lexeme=yytext(); return Instruccion;
          }
        case 48: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
