/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Proyecto;

import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Vanessa Sandoval
 */
public class tablaSimbolos extends javax.swing.JFrame {

    /**
     * Creates new form tablaSimbolos
     */
    public tablaSimbolos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 3, 24)); // NOI18N
        jLabel1.setText("TABLA DE SIMBOLOS");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "SIMBOLO", "TIPO", "VALOR", "TAMAÃ‘O", "DIRECCION"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(335, 335, 335)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tablaSimbolos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tablaSimbolos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tablaSimbolos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tablaSimbolos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tablaSimbolos().setVisible(true);
            }
        });
    }
    
    public void agregarVariables(String nombre, String Tipo, String Valor, String Tamanio,String Direccion){
        DefaultTableModel tSimbolos = (DefaultTableModel)jTable1.getModel();
        String ceros = "";
        String[] renglonVariables = new String[5];
        renglonVariables[0] = nombre;
        renglonVariables[1] = Tipo;        
        renglonVariables[2] = Valor;
        renglonVariables[3] = Tamanio;
        for(int i = 0 ; i < (4 - Direccion.length()) ; i++){
            ceros += "0";
        }
        if(Direccion.isEmpty()){
            Direccion = "";
        }else{
            Direccion = ceros + Direccion;
        }
        renglonVariables[4] = Direccion;
        tSimbolos.addRow(renglonVariables);
    }
    
    public int buscarVariablePush(String nombreVariable){
        DefaultTableModel tSimbolos = (DefaultTableModel)jTable1.getModel();
        String[] datosVariables = new String[2];
        for (int i = 0; i < tSimbolos.getRowCount(); i++) {
            if(tSimbolos.getValueAt(i, 0).equals(nombreVariable)){
                for (int j = 0; j < 2; j++) {
                    datosVariables[j] = (String) (tSimbolos.getValueAt(i, j));
                }
                break;
            }
	}
        if(datosVariables.length == 0){
            return -1;
        }else{
            if("DW".equals(datosVariables[1]) || "EQU".equals(datosVariables[1])){
                return 1;
            }
            return -1;
        }
    }
    
    public int buscarVariableLDS(String nombreVariable){
        DefaultTableModel tSimbolos = (DefaultTableModel)jTable1.getModel();
        String[] datosVariables = new String[2];
        for (int i = 0; i < tSimbolos.getRowCount(); i++) {
            if(tSimbolos.getValueAt(i, 0).equals(nombreVariable)){
                for (int j = 0; j < 2; j++) {
                    datosVariables[j] = (String) (tSimbolos.getValueAt(i, j));
                }
                break;
            }
	}
        if(datosVariables.length == 0){
            return -1;
        }else{
            if("DW".equals(datosVariables[1]) || "DB".equals(datosVariables[1]) || "EQU".equals(datosVariables[1])){
                return 1;
            }
            return -1;
        }
    }
    
    public int buscarVariableSub(String nombreVariable , int tamanioRegistro){
        DefaultTableModel tSimbolos = (DefaultTableModel)jTable1.getModel();
        String[] datosVariables = new String[2];
        for (int i = 0; i < tSimbolos.getRowCount(); i++) {
            if(tSimbolos.getValueAt(i, 0).equals(nombreVariable)){
                for (int j = 0; j < 2; j++) {
                    datosVariables[j] = (String) (tSimbolos.getValueAt(i, j));
                }
                break;
            }
	}
        if(datosVariables.length == 0){
            return -1;
        }else{
            if(("DW".equals(datosVariables[1]) || "EQU".equals(datosVariables[1])) && (tamanioRegistro == 16) ){
                return 1;
            }else if("DB".equals(datosVariables[1]) && (tamanioRegistro == 8)){
                return 2;
            }else if(tamanioRegistro == 0){
                return 1;
            }
            return -1;
        }
    }
   
    public String direccionEtiqueta(Object nombreEtiqueta){
        String nE = (String) nombreEtiqueta+":";
        DefaultTableModel tSimbolos = (DefaultTableModel)jTable1.getModel();
        String direccion = null;
        for (int i = 0; i < tSimbolos.getRowCount(); i++) {
            if(tSimbolos.getValueAt(i,0).equals(nE)){
                direccion = (String) tSimbolos.getValueAt(i, 4);
            }
	}
        return direccion;
    }
    
    public String direccionVariable(Object nombreVariable){
        String nVariable = (String) nombreVariable;
        DefaultTableModel tSimbolos = (DefaultTableModel)jTable1.getModel();
        String direccion = null;
        for (int i = 0; i < tSimbolos.getRowCount(); i++) {
            if(tSimbolos.getValueAt(i,0).equals(nVariable)){
                direccion = (String) tSimbolos.getValueAt(i, 4);
            }
	}
        return direccion;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    void close() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
}
