/* The following code was generated by JFlex 1.4.3 on 18/05/22 02:36 PM */

package analisadorlexico;

import static analisadorlexico.Tokens.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 18/05/22 02:36 PM from the specification file
 * <tt>C:/Users/danie/OneDrive/Documentos/5Âª SEMESTRE FACULTAD/ENSAMBLADORES/AnalisadorLexico/src/analisadorlexico/Tabla.flex</tt>
 */
class Tabla {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\5\1\110\2\0\1\5\22\0\1\12\1\10\1\56\1\10"+
    "\1\62\1\10\1\0\1\53\1\52\1\54\1\10\1\101\1\7\1\66"+
    "\1\10\1\0\1\67\11\4\1\72\1\107\3\0\1\10\1\0\1\41"+
    "\1\13\1\30\1\26\1\27\1\2\1\43\1\55\1\103\1\70\1\51"+
    "\1\76\1\44\1\45\1\47\1\21\1\11\1\23\1\31\1\42\1\106"+
    "\1\104\1\16\1\73\1\11\1\74\1\100\1\1\1\102\1\1\1\3"+
    "\1\1\1\32\1\14\1\25\1\17\1\35\1\2\1\36\1\6\1\24"+
    "\1\71\1\50\1\77\1\37\1\40\1\46\1\64\1\2\1\22\1\34"+
    "\1\33\1\63\1\105\1\15\1\20\1\65\1\75\1\60\1\57\1\61"+
    "\43\0\1\10\35\0\1\10\uff40\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\4\1\1\2\1\3\3\4\2\5\1\4\1\1"+
    "\4\6\1\4\5\6\7\1\3\6\1\3\1\7\6\0"+
    "\1\10\1\3\1\4\1\5\1\4\1\6\2\4\1\0"+
    "\1\5\1\6\1\5\1\6\1\4\2\6\2\0\7\6"+
    "\1\0\1\6\1\0\2\6\15\0\6\6\4\0\1\11"+
    "\1\0\1\12\1\0\2\6\3\0\4\6\1\0\3\6"+
    "\1\0\1\13\2\0\1\14\6\0\2\6\1\0\1\15"+
    "\1\16\5\0\3\12\4\0\1\6\3\0\2\6\2\0"+
    "\1\6\1\2\1\17\1\0\1\17\1\10\10\0\1\20"+
    "\2\0\3\12\16\0\7\6\12\0\1\15\1\21\2\0"+
    "\1\12\5\0\2\12\13\0\1\12\10\6\1\12\1\6"+
    "\4\12\1\6\3\0\1\6\4\0\1\12\1\22\3\0"+
    "\1\12\1\0\1\6\10\0\1\21\1\0\1\12\6\6"+
    "\1\12\2\0\4\6\6\0\2\12\2\0\1\6\4\0"+
    "\2\12\6\0\2\12\3\0\1\6\3\0\1\23\3\0"+
    "\1\23\5\0";

  private static int [] zzUnpackAction() {
    int [] result = new int[320];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\111\0\222\0\333\0\u0124\0\u016d\0\u01b6\0\u01ff"+
    "\0\u0248\0\u0291\0\u02da\0\u0323\0\u036c\0\u03b5\0\u03fe\0\u0447"+
    "\0\u0490\0\u04d9\0\u0522\0\u056b\0\u05b4\0\u05fd\0\u0646\0\u068f"+
    "\0\u06d8\0\u0721\0\u076a\0\u07b3\0\u07fc\0\u0845\0\u088e\0\u08d7"+
    "\0\u0920\0\u0969\0\u09b2\0\111\0\222\0\u09fb\0\u0a44\0\u0a8d"+
    "\0\u0ad6\0\u0b1f\0\u0b1f\0\u0b68\0\u0bb1\0\u0bfa\0\u0c43\0\u0c8c"+
    "\0\u0cd5\0\u0d1e\0\u0d67\0\u0db0\0\u0df9\0\u0e42\0\u0e8b\0\u0ed4"+
    "\0\u0f1d\0\u0f66\0\u0faf\0\u0ff8\0\u1041\0\u108a\0\u10d3\0\u111c"+
    "\0\u1165\0\u11ae\0\u11f7\0\u1240\0\u1289\0\u12d2\0\u131b\0\u1364"+
    "\0\u13ad\0\u13f6\0\u143f\0\u1488\0\u14d1\0\u151a\0\u1563\0\u15ac"+
    "\0\u15f5\0\u163e\0\u1687\0\u16d0\0\u1719\0\u1762\0\u17ab\0\u17f4"+
    "\0\u183d\0\u1886\0\u18cf\0\u1918\0\u1961\0\u19aa\0\u19f3\0\111"+
    "\0\u1a3c\0\u1a85\0\u1ace\0\u1b17\0\u1b60\0\u1ba9\0\u1bf2\0\u1c3b"+
    "\0\u1c84\0\u1ccd\0\u1d16\0\u1d5f\0\u1da8\0\u1df1\0\u1e3a\0\u1e83"+
    "\0\u1ecc\0\111\0\u1f15\0\u1f5e\0\u1fa7\0\u1ff0\0\u2039\0\u2082"+
    "\0\u20cb\0\u2114\0\u215d\0\u21a6\0\u21ef\0\u2238\0\u1918\0\u2281"+
    "\0\u22ca\0\u2313\0\u235c\0\u23a5\0\u23ee\0\u1a3c\0\u2437\0\u2480"+
    "\0\u24c9\0\u2512\0\u255b\0\u25a4\0\u25ed\0\u2636\0\u267f\0\u26c8"+
    "\0\u2711\0\u275a\0\u27a3\0\u27ec\0\u2835\0\111\0\111\0\u287e"+
    "\0\u1f5e\0\111\0\u28c7\0\u2910\0\u2959\0\u29a2\0\u29eb\0\u2a34"+
    "\0\u2a7d\0\u2ac6\0\u22ca\0\u2b0f\0\u2b58\0\u24c9\0\u2512\0\u255b"+
    "\0\u2ba1\0\u2bea\0\u2c33\0\u2c7c\0\u2cc5\0\u2d0e\0\u2d57\0\u2da0"+
    "\0\u2de9\0\u2e32\0\u2e7b\0\u2ec4\0\u2f0d\0\u2f56\0\u2f9f\0\u2fe8"+
    "\0\u3031\0\u307a\0\u30c3\0\u310c\0\u3155\0\u319e\0\u31e7\0\u3230"+
    "\0\u3279\0\u32c2\0\u330b\0\u3354\0\u339d\0\u33e6\0\u342f\0\u2b0f"+
    "\0\u3478\0\u34c1\0\u350a\0\u2ba1\0\u3553\0\u359c\0\u35e5\0\u362e"+
    "\0\u3677\0\u2c33\0\u2c7c\0\u36c0\0\u3709\0\u3752\0\u379b\0\u37e4"+
    "\0\u382d\0\u3876\0\u38bf\0\u3908\0\u3951\0\u399a\0\u2f9f\0\u39e3"+
    "\0\u3a2c\0\u3a75\0\u3abe\0\u3b07\0\u3b50\0\u3b99\0\u3be2\0\u3031"+
    "\0\u3c2b\0\u307a\0\u30c3\0\u310c\0\u3155\0\u3c74\0\u3cbd\0\u3d06"+
    "\0\u3d4f\0\111\0\u3d98\0\u3de1\0\u3e2a\0\u3e73\0\u3ebc\0\u3f05"+
    "\0\u3f4e\0\u3f97\0\u3fe0\0\u4029\0\u4072\0\u40bb\0\u4104\0\u414d"+
    "\0\u4196\0\u41df\0\u4228\0\u4271\0\u42ba\0\u4303\0\111\0\u434c"+
    "\0\u4395\0\u43de\0\u3f4e\0\u3f97\0\u4427\0\u4470\0\u3fe0\0\u44b9"+
    "\0\u4502\0\u454b\0\u454b\0\u4594\0\u2e7b\0\u4196\0\u45dd\0\u4626"+
    "\0\u466f\0\u46b8\0\u4701\0\u474a\0\u4793\0\u47dc\0\u4825\0\u486e"+
    "\0\u48b7\0\u4900\0\u4949\0\u4992\0\u49db\0\u4a24\0\u4a6d\0\u4ab6"+
    "\0\u4aff\0\u4b48\0\u4b91\0\u4bda\0\u4c23\0\u4c6c\0\u4cb5\0\u4cfe"+
    "\0\u4d47\0\u4d90\0\u4dd9\0\u4e22\0\u4e6b\0\u4dd9\0\u1a3c\0\u4eb4"+
    "\0\u4efd\0\u4f46\0\111\0\u4f8f\0\u4fd8\0\u5021\0\u506a\0\u50b3";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[320];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\4\1\10"+
    "\1\2\1\5\1\7\1\11\1\12\1\13\1\14\1\15"+
    "\1\16\1\5\1\17\1\20\1\21\1\22\1\23\1\17"+
    "\1\24\1\25\1\26\1\17\1\27\1\17\1\4\1\17"+
    "\1\4\1\30\1\20\1\4\1\17\1\4\2\17\2\4"+
    "\1\31\1\32\1\2\1\4\1\33\4\2\2\5\1\4"+
    "\1\34\1\6\1\35\1\36\1\2\1\37\1\5\1\4"+
    "\1\40\1\41\1\3\1\2\1\3\1\42\1\20\1\17"+
    "\1\5\1\43\1\44\112\0\1\45\1\0\1\45\5\0"+
    "\1\45\2\0\1\45\1\0\2\45\1\0\1\45\1\0"+
    "\1\45\1\0\2\45\2\0\2\45\7\0\1\45\7\0"+
    "\1\46\10\0\2\45\6\0\2\45\3\0\1\45\1\0"+
    "\1\45\1\0\1\45\1\0\1\45\4\0\2\47\1\50"+
    "\1\0\1\47\2\0\1\47\1\0\37\47\3\0\1\47"+
    "\5\0\3\47\1\0\1\50\2\47\1\0\5\47\3\0"+
    "\4\47\3\0\1\45\1\47\1\51\1\50\1\0\1\47"+
    "\2\0\1\51\1\0\1\47\1\51\1\47\2\51\1\47"+
    "\1\51\1\47\1\51\1\47\2\51\2\47\2\51\7\47"+
    "\1\51\7\47\1\46\2\0\1\47\5\0\2\51\1\47"+
    "\1\0\1\50\2\47\1\0\2\51\3\47\1\45\1\0"+
    "\1\45\1\47\1\51\1\47\1\51\4\0\2\52\1\6"+
    "\1\0\1\53\2\0\1\52\1\0\37\52\3\0\1\53"+
    "\5\0\3\52\1\0\1\6\2\52\1\0\5\52\3\0"+
    "\4\52\7\0\1\7\1\0\1\7\2\0\1\7\103\0"+
    "\1\7\1\0\1\10\2\0\1\54\2\55\2\56\1\57"+
    "\2\0\4\60\1\57\7\60\1\0\1\60\1\0\2\60"+
    "\1\0\1\60\1\0\2\60\26\0\2\60\3\0\3\60"+
    "\5\0\2\47\1\50\1\0\1\47\1\55\1\0\1\47"+
    "\1\0\2\61\2\47\1\61\6\47\1\61\23\47\3\0"+
    "\1\47\5\0\3\47\1\0\1\50\2\47\1\0\5\47"+
    "\3\0\4\47\3\0\1\45\1\47\1\51\1\50\1\0"+
    "\1\47\1\55\1\0\1\51\1\0\1\61\1\62\1\47"+
    "\1\51\1\62\1\47\1\51\1\47\1\51\1\47\1\51"+
    "\1\62\2\47\2\51\7\47\1\51\7\47\1\46\2\0"+
    "\1\47\5\0\2\51\1\47\1\0\1\50\2\47\1\0"+
    "\2\51\3\47\1\45\1\0\1\45\1\47\1\51\1\47"+
    "\1\51\4\0\2\47\1\50\1\0\1\47\1\56\1\0"+
    "\1\47\1\63\2\47\3\64\2\47\4\65\1\64\7\65"+
    "\1\47\1\65\1\47\2\65\1\47\1\65\1\47\2\65"+
    "\2\47\3\0\1\47\5\0\3\47\1\0\1\50\2\47"+
    "\1\0\3\47\2\65\3\0\3\65\1\47\3\0\1\45"+
    "\1\47\1\51\1\50\1\0\1\47\1\56\1\0\1\51"+
    "\1\63\1\47\1\51\1\64\2\66\1\47\1\51\1\65"+
    "\1\67\1\65\1\67\1\66\2\65\2\67\3\65\1\47"+
    "\1\65\1\47\1\65\1\67\1\47\1\65\1\47\2\65"+
    "\2\47\1\46\2\0\1\47\5\0\2\51\1\47\1\0"+
    "\1\50\2\47\1\0\2\51\1\47\2\65\1\45\1\0"+
    "\1\45\1\65\1\67\1\65\1\51\3\0\1\45\1\47"+
    "\1\51\1\50\1\0\1\47\1\57\1\0\1\51\1\63"+
    "\1\61\1\62\1\64\1\66\1\70\1\47\1\51\1\65"+
    "\1\67\1\71\1\67\1\70\2\65\1\67\1\72\3\65"+
    "\1\47\1\65\1\47\1\65\1\67\1\47\1\65\1\47"+
    "\2\65\2\47\1\46\2\0\1\47\5\0\1\73\1\51"+
    "\1\47\1\0\1\50\2\47\1\0\2\51\1\47\2\65"+
    "\1\45\1\0\1\45\1\65\1\67\1\65\1\51\4\0"+
    "\2\47\1\50\1\0\1\47\2\0\1\47\1\0\12\47"+
    "\1\74\24\47\3\0\1\47\5\0\3\47\1\0\1\50"+
    "\2\47\1\0\5\47\3\0\4\47\4\0\2\47\1\50"+
    "\1\0\1\47\1\60\1\0\1\47\1\63\2\47\3\65"+
    "\2\47\14\65\1\47\1\65\1\47\2\65\1\47\1\65"+
    "\1\47\2\65\2\47\3\0\1\47\5\0\3\47\1\0"+
    "\1\50\2\47\1\0\3\47\2\65\3\0\3\65\1\47"+
    "\3\0\1\45\1\47\1\51\1\50\1\0\1\47\1\60"+
    "\1\0\1\51\1\63\1\47\1\51\1\65\2\67\1\47"+
    "\1\51\1\65\1\67\1\65\2\67\2\65\2\67\3\65"+
    "\1\47\1\65\1\47\1\65\1\67\1\47\1\65\1\47"+
    "\2\65\2\47\1\46\2\0\1\47\5\0\2\51\1\47"+
    "\1\0\1\50\2\47\1\0\2\51\1\47\2\65\1\45"+
    "\1\0\1\45\1\65\1\67\1\65\1\51\4\0\2\47"+
    "\1\50\1\0\1\47\1\60\1\0\1\47\1\63\2\47"+
    "\2\65\1\75\2\47\14\65\1\47\1\76\1\47\2\65"+
    "\1\47\1\65\1\47\2\65\2\47\3\0\1\47\5\0"+
    "\3\47\1\0\1\50\2\47\1\0\3\47\2\65\3\0"+
    "\3\65\1\47\3\0\1\45\1\47\1\51\1\50\1\0"+
    "\1\47\1\60\1\0\1\51\1\63\1\47\1\51\1\65"+
    "\2\67\1\47\1\51\1\65\1\67\1\65\2\67\2\65"+
    "\2\67\3\65\1\47\1\65\1\47\1\65\1\67\1\47"+
    "\1\65\1\47\1\77\1\65\2\47\1\46\2\0\1\47"+
    "\5\0\2\51\1\47\1\0\1\50\2\47\1\0\2\51"+
    "\1\47\2\65\1\45\1\0\1\45\1\65\1\67\1\65"+
    "\1\51\3\0\1\45\1\47\1\51\1\50\1\0\1\47"+
    "\1\57\1\0\1\51\1\63\1\61\1\62\1\64\1\66"+
    "\1\70\1\47\1\51\1\65\1\67\1\65\1\67\1\70"+
    "\2\65\2\67\3\65\1\47\1\65\1\47\1\100\1\67"+
    "\1\47\1\65\1\47\2\65\2\47\1\46\2\0\1\47"+
    "\5\0\2\51\1\47\1\0\1\50\2\47\1\0\2\51"+
    "\1\47\2\65\1\45\1\0\1\45\1\101\1\67\1\65"+
    "\1\51\4\0\2\47\1\50\1\0\1\47\1\60\1\0"+
    "\1\47\1\63\2\47\3\65\2\47\14\65\1\47\1\65"+
    "\1\47\2\65\1\47\1\65\1\47\1\65\1\102\2\47"+
    "\3\0\1\47\5\0\3\47\1\0\1\50\2\47\1\0"+
    "\3\47\2\65\3\0\3\65\1\47\3\0\1\45\1\47"+
    "\1\51\1\50\1\0\1\47\1\60\1\0\1\51\1\63"+
    "\1\47\1\51\1\65\2\67\1\47\1\51\1\65\1\67"+
    "\1\65\2\67\2\65\2\67\3\65\1\47\1\65\1\47"+
    "\1\65\1\103\1\47\1\65\1\47\2\65\2\47\1\46"+
    "\2\0\1\104\5\0\2\51\1\47\1\0\1\50\2\47"+
    "\1\0\2\51\1\47\2\65\1\45\1\0\1\45\1\65"+
    "\1\67\1\65\1\51\3\0\1\45\1\47\1\51\1\50"+
    "\1\0\1\47\1\60\1\0\1\51\1\63\1\47\1\51"+
    "\1\65\1\67\1\105\1\47\1\51\1\65\1\67\1\65"+
    "\2\67\2\65\2\67\3\65\1\47\1\65\1\47\1\65"+
    "\1\67\1\47\1\65\1\47\2\65\2\47\1\46\2\0"+
    "\1\47\5\0\2\51\1\47\1\0\1\50\2\47\1\0"+
    "\2\51\1\47\2\65\1\45\1\0\1\45\1\65\1\67"+
    "\1\65\1\51\4\0\2\47\1\50\1\0\1\106\1\60"+
    "\1\0\1\47\1\63\2\47\3\65\2\47\11\65\1\107"+
    "\2\65\1\47\1\65\1\47\2\65\1\47\1\65\1\47"+
    "\2\65\2\47\3\0\1\47\5\0\3\47\1\0\1\50"+
    "\2\47\1\0\3\47\2\65\3\0\3\65\1\47\4\0"+
    "\2\47\1\50\1\0\1\47\1\60\1\0\1\47\1\63"+
    "\2\47\3\65\2\47\4\65\1\110\7\65\1\47\1\65"+
    "\1\47\2\65\1\47\1\65\1\47\2\65\2\47\3\0"+
    "\1\47\5\0\3\47\1\0\1\50\2\47\1\0\3\47"+
    "\2\65\3\0\3\65\1\47\70\0\1\111\24\0\1\112"+
    "\3\0\45\112\1\0\2\112\4\0\5\112\1\0\10\112"+
    "\1\0\1\112\1\0\4\112\4\0\1\113\3\0\45\113"+
    "\1\0\2\113\4\0\5\113\1\0\10\113\1\0\1\113"+
    "\1\0\4\113\71\0\1\114\23\0\2\47\1\50\1\0"+
    "\1\47\2\0\1\47\1\0\15\47\1\115\1\116\7\47"+
    "\1\117\3\47\1\120\4\47\3\0\1\47\5\0\3\47"+
    "\1\0\1\50\2\47\1\0\3\47\1\116\1\47\3\0"+
    "\4\47\4\0\2\47\1\50\1\0\1\47\2\0\1\47"+
    "\1\0\12\47\1\121\4\47\1\122\1\47\1\123\3\47"+
    "\1\124\11\47\3\0\1\47\5\0\3\47\1\0\1\50"+
    "\2\47\1\0\4\47\1\116\3\0\4\47\3\0\1\45"+
    "\1\47\1\51\1\50\1\0\1\47\2\0\1\51\1\0"+
    "\1\47\1\51\1\47\2\51\1\47\1\51\1\47\1\51"+
    "\1\47\2\51\1\47\1\125\2\51\7\47\1\51\7\47"+
    "\1\46\2\0\1\47\5\0\2\51\1\47\1\0\1\50"+
    "\2\47\1\0\2\51\3\47\1\45\1\0\1\45\1\47"+
    "\1\51\1\47\1\51\4\0\2\47\1\50\1\0\1\47"+
    "\1\60\1\0\1\47\1\63\2\47\3\65\2\47\4\65"+
    "\1\126\7\65\1\47\1\65\1\47\2\65\1\47\1\65"+
    "\1\47\1\65\1\127\2\47\3\0\1\47\5\0\3\47"+
    "\1\0\1\50\2\47\1\0\3\47\2\65\3\0\3\65"+
    "\1\47\4\0\2\47\1\50\1\0\1\47\1\60\1\0"+
    "\1\47\1\63\2\47\2\65\1\130\2\47\14\65\1\47"+
    "\1\65\1\47\2\65\1\47\1\65\1\47\1\131\1\65"+
    "\2\47\3\0\1\47\5\0\3\47\1\0\1\50\2\47"+
    "\1\0\3\47\2\65\3\0\3\65\1\47\4\0\2\47"+
    "\1\50\1\0\1\47\1\60\1\0\1\47\1\63\2\47"+
    "\3\65\2\47\4\65\1\132\7\65\1\47\1\65\1\47"+
    "\2\65\1\47\1\133\1\47\2\65\2\47\3\0\1\47"+
    "\5\0\3\47\1\0\1\50\2\47\1\0\3\47\2\65"+
    "\3\0\3\65\1\47\2\0\110\43\3\0\1\134\1\0"+
    "\1\135\1\0\45\134\1\136\2\134\4\0\5\134\1\135"+
    "\10\134\1\0\1\134\1\0\4\134\4\0\2\47\1\50"+
    "\1\0\1\47\2\0\1\47\1\137\37\47\3\0\1\47"+
    "\5\0\3\47\1\0\1\50\2\47\1\140\5\47\3\0"+
    "\4\47\6\0\1\50\5\0\1\137\54\0\1\50\2\0"+
    "\1\140\17\0\1\45\1\47\1\51\1\50\1\0\1\47"+
    "\2\0\1\51\1\137\1\47\1\51\1\47\2\51\1\47"+
    "\1\51\1\47\1\51\1\47\2\51\2\47\2\51\7\47"+
    "\1\51\7\47\1\46\2\0\1\47\5\0\2\51\1\47"+
    "\1\0\1\50\2\47\1\140\2\51\3\47\1\45\1\0"+
    "\1\45\1\47\1\51\1\47\1\51\4\0\2\52\2\0"+
    "\1\52\2\0\1\52\1\137\37\52\3\0\1\52\5\0"+
    "\3\52\2\0\2\52\1\140\5\52\3\0\4\52\4\0"+
    "\2\141\1\142\1\7\1\141\1\7\1\0\1\141\1\7"+
    "\37\141\3\0\1\141\5\0\3\141\1\0\1\142\2\141"+
    "\1\0\5\141\3\0\4\141\11\0\1\55\3\0\2\55"+
    "\2\0\1\55\6\0\1\55\71\0\1\56\2\0\1\63"+
    "\2\0\3\56\2\0\4\60\1\56\7\60\1\0\1\60"+
    "\1\0\2\60\1\0\1\60\1\0\2\60\26\0\2\60"+
    "\3\0\3\60\12\0\1\57\2\0\1\63\2\55\2\56"+
    "\1\57\2\0\4\60\1\57\7\60\1\0\1\60\1\0"+
    "\2\60\1\0\1\60\1\0\2\60\26\0\2\60\3\0"+
    "\3\60\12\0\1\60\2\0\1\63\2\0\3\60\2\0"+
    "\14\60\1\0\1\60\1\0\2\60\1\0\1\60\1\0"+
    "\2\60\26\0\2\60\3\0\3\60\5\0\2\47\1\50"+
    "\1\0\1\47\1\55\1\0\1\47\1\137\2\61\2\47"+
    "\1\61\6\47\1\61\23\47\3\0\1\47\5\0\3\47"+
    "\1\0\1\50\2\47\1\140\5\47\3\0\4\47\3\0"+
    "\1\45\1\47\1\51\1\50\1\0\1\47\1\55\1\0"+
    "\1\51\1\137\1\61\1\62\1\47\1\51\1\62\1\47"+
    "\1\51\1\47\1\51\1\47\1\51\1\62\2\47\2\51"+
    "\7\47\1\51\7\47\1\46\2\0\1\47\5\0\2\51"+
    "\1\47\1\0\1\50\2\47\1\140\2\51\3\47\1\45"+
    "\1\0\1\45\1\47\1\51\1\47\1\51\4\0\2\141"+
    "\1\142\1\0\1\141\2\0\1\141\1\0\37\141\3\0"+
    "\1\141\5\0\3\141\1\0\1\142\2\141\1\0\5\141"+
    "\3\0\4\141\4\0\2\47\1\50\1\0\1\47\1\56"+
    "\1\0\1\47\1\143\2\47\3\64\2\47\4\65\1\64"+
    "\7\65\1\47\1\65\1\47\2\65\1\47\1\65\1\47"+
    "\2\65\2\47\3\0\1\47\5\0\3\47\1\0\1\50"+
    "\2\47\1\140\3\47\2\65\3\0\3\65\1\47\4\0"+
    "\2\47\1\50\1\0\1\47\1\60\1\0\1\47\1\143"+
    "\2\47\3\65\2\47\14\65\1\47\1\65\1\47\2\65"+
    "\1\47\1\65\1\47\2\65\2\47\3\0\1\47\5\0"+
    "\3\47\1\0\1\50\2\47\1\140\3\47\2\65\3\0"+
    "\3\65\1\47\3\0\1\45\1\47\1\51\1\50\1\0"+
    "\1\47\1\56\1\0\1\51\1\143\1\47\1\51\1\64"+
    "\2\66\1\47\1\51\1\65\1\67\1\65\1\67\1\66"+
    "\2\65\2\67\3\65\1\47\1\65\1\47\1\65\1\67"+
    "\1\47\1\65\1\47\2\65\2\47\1\46\2\0\1\47"+
    "\5\0\2\51\1\47\1\0\1\50\2\47\1\140\2\51"+
    "\1\47\2\65\1\45\1\0\1\45\1\65\1\67\1\65"+
    "\1\51\3\0\1\45\1\47\1\51\1\50\1\0\1\47"+
    "\1\60\1\0\1\51\1\143\1\47\1\51\1\65\2\67"+
    "\1\47\1\51\1\65\1\67\1\65\2\67\2\65\2\67"+
    "\3\65\1\47\1\65\1\47\1\65\1\67\1\47\1\65"+
    "\1\47\2\65\2\47\1\46\2\0\1\47\5\0\2\51"+
    "\1\47\1\0\1\50\2\47\1\140\2\51\1\47\2\65"+
    "\1\45\1\0\1\45\1\65\1\67\1\65\1\51\3\0"+
    "\1\45\1\47\1\51\1\50\1\0\1\47\1\57\1\0"+
    "\1\51\1\143\1\61\1\62\1\64\1\66\1\70\1\47"+
    "\1\51\1\65\1\67\1\65\1\67\1\70\2\65\2\67"+
    "\3\65\1\47\1\65\1\47\1\65\1\67\1\47\1\65"+
    "\1\47\2\65\2\47\1\46\2\0\1\47\5\0\2\51"+
    "\1\47\1\0\1\50\2\47\1\140\2\51\1\47\2\65"+
    "\1\45\1\0\1\45\1\65\1\67\1\65\1\51\4\0"+
    "\2\47\1\50\1\0\1\47\1\60\1\0\1\47\1\143"+
    "\2\47\3\65\2\47\14\65\1\47\1\65\1\47\2\65"+
    "\1\47\1\65\1\47\2\65\2\47\3\0\1\47\5\0"+
    "\3\47\1\0\1\50\2\47\1\140\3\47\2\65\3\0"+
    "\2\65\1\144\1\47\3\0\1\45\1\47\1\51\1\50"+
    "\1\0\1\47\1\60\1\0\1\51\1\143\1\47\1\51"+
    "\1\65\2\67\1\47\1\51\1\65\1\67\1\65\2\67"+
    "\2\65\2\67\1\145\2\65\1\47\1\65\1\47\1\65"+
    "\1\67\1\47\1\65\1\47\2\65\2\47\1\46\2\0"+
    "\1\47\5\0\2\51\1\47\1\0\1\50\2\47\1\140"+
    "\2\51\1\47\2\65\1\45\1\0\1\45\1\65\1\67"+
    "\1\65\1\51\3\0\1\45\1\47\1\51\1\50\1\0"+
    "\1\47\2\0\1\51\1\137\1\47\1\51\1\47\2\51"+
    "\1\47\1\51\1\47\1\51\1\47\2\51\2\47\2\51"+
    "\7\47\1\51\7\47\1\46\2\0\1\47\5\0\1\51"+
    "\1\146\1\47\1\0\1\50\2\47\1\140\2\51\3\47"+
    "\1\45\1\0\1\45\1\47\1\51\1\47\1\51\4\0"+
    "\2\47\1\50\1\0\1\147\2\0\1\47\1\137\37\47"+
    "\3\0\1\47\5\0\3\47\1\0\1\50\2\47\1\140"+
    "\5\47\3\0\4\47\4\0\2\47\1\50\1\0\1\47"+
    "\1\60\1\0\1\47\1\143\2\47\3\65\2\47\2\65"+
    "\1\71\11\65\1\47\1\65\1\47\2\65\1\47\1\65"+
    "\1\47\2\65\2\47\3\0\1\47\5\0\3\47\1\0"+
    "\1\50\2\47\1\140\3\47\2\65\3\0\3\65\1\47"+
    "\4\0\2\47\1\50\1\0\1\47\1\60\1\0\1\47"+
    "\1\143\2\47\3\65\2\47\14\65\1\47\1\65\1\47"+
    "\2\65\1\47\1\65\1\47\2\65\2\47\3\0\1\47"+
    "\5\0\1\150\2\47\1\0\1\50\2\47\1\140\3\47"+
    "\2\65\3\0\3\65\1\47\4\0\2\47\1\50\1\0"+
    "\1\47\1\60\1\0\1\47\1\143\2\47\2\65\1\151"+
    "\2\47\14\65\1\47\1\65\1\47\2\65\1\47\1\65"+
    "\1\47\2\65\2\47\3\0\1\47\5\0\3\47\1\0"+
    "\1\50\2\47\1\140\3\47\2\65\3\0\3\65\1\47"+
    "\4\0\2\47\1\50\1\0\1\47\1\60\1\0\1\47"+
    "\1\143\2\47\3\65\2\47\14\65\1\47\1\65\1\47"+
    "\1\65\1\152\1\47\1\65\1\47\2\65\2\47\3\0"+
    "\1\47\5\0\3\47\1\0\1\50\2\47\1\140\3\47"+
    "\2\65\3\0\3\65\1\47\4\0\2\47\1\50\1\0"+
    "\1\47\1\60\1\0\1\47\1\143\2\47\3\65\2\47"+
    "\14\65\1\47\1\65\1\47\2\65\1\47\1\65\1\47"+
    "\2\65\2\47\3\0\1\47\5\0\3\47\1\0\1\50"+
    "\2\47\1\140\3\47\2\65\3\0\1\65\1\144\1\65"+
    "\1\47\4\0\2\47\1\50\1\0\1\47\1\60\1\0"+
    "\1\47\1\143\2\47\3\65\2\47\4\65\1\153\7\65"+
    "\1\47\1\65\1\47\2\65\1\47\1\65\1\47\2\65"+
    "\2\47\3\0\1\47\5\0\3\47\1\0\1\50\2\47"+
    "\1\140\3\47\2\65\3\0\3\65\1\47\3\0\1\45"+
    "\1\47\1\51\1\50\1\0\1\47\1\60\1\0\1\51"+
    "\1\143\1\47\1\51\1\65\2\67\1\47\1\51\1\65"+
    "\1\67\1\65\2\67\2\65\2\67\3\65\1\47\1\65"+
    "\1\47\1\154\1\67\1\47\1\65\1\47\2\65\2\47"+
    "\1\46\2\0\1\47\5\0\2\51\1\47\1\0\1\50"+
    "\2\47\1\140\2\51\1\47\2\65\1\45\1\0\1\45"+
    "\1\65\1\67\1\65\1\51\4\0\2\47\1\50\1\0"+
    "\1\47\2\0\1\47\1\137\37\47\3\0\1\47\5\0"+
    "\3\47\1\0\1\50\2\47\1\140\3\47\1\155\1\47"+
    "\3\0\4\47\3\0\1\45\1\47\1\51\1\50\1\0"+
    "\1\47\1\60\1\0\1\51\1\143\1\47\1\51\1\65"+
    "\1\67\1\156\1\47\1\51\1\65\1\67\1\65\2\67"+
    "\2\65\2\67\3\65\1\47\1\65\1\47\1\65\1\67"+
    "\1\47\1\65\1\47\2\65\2\47\1\46\2\0\1\47"+
    "\5\0\2\51\1\47\1\0\1\50\2\47\1\140\2\51"+
    "\1\47\2\65\1\45\1\0\1\45\1\65\1\67\1\65"+
    "\1\51\4\0\2\47\1\50\1\0\1\47\2\0\1\47"+
    "\1\137\37\47\3\0\1\47\5\0\3\47\1\0\1\50"+
    "\2\47\1\140\4\47\1\155\3\0\4\47\4\0\2\47"+
    "\1\50\1\0\1\47\1\60\1\0\1\47\1\143\2\47"+
    "\3\65\2\47\10\65\1\157\3\65\1\47\1\65\1\47"+
    "\2\65\1\47\1\65\1\47\2\65\2\47\3\0\1\47"+
    "\5\0\3\47\1\0\1\50\2\47\1\140\3\47\2\65"+
    "\3\0\3\65\1\47\4\0\2\47\1\50\1\0\1\47"+
    "\1\60\1\0\1\47\1\143\2\47\3\65\2\47\4\65"+
    "\1\160\7\65\1\47\1\65\1\47\2\65\1\47\1\65"+
    "\1\47\2\65\2\47\3\0\1\47\5\0\3\47\1\0"+
    "\1\50\2\47\1\140\3\47\2\65\3\0\3\65\1\47"+
    "\6\0\1\161\62\0\1\161\23\0\1\112\3\0\45\112"+
    "\1\162\2\112\4\0\1\163\4\112\1\0\10\112\1\0"+
    "\1\112\1\0\4\112\4\0\1\113\3\0\45\113\1\0"+
    "\2\113\1\164\3\0\1\165\4\113\1\0\10\113\1\0"+
    "\1\113\1\0\4\113\6\0\1\166\62\0\1\166\23\0"+
    "\2\47\1\50\1\0\1\47\2\0\1\47\1\137\37\47"+
    "\3\0\1\47\5\0\3\47\1\0\1\50\2\47\1\140"+
    "\1\167\4\47\3\0\4\47\4\0\2\47\1\50\1\0"+
    "\1\47\2\0\1\47\1\170\37\47\3\0\1\47\5\0"+
    "\3\47\1\0\1\50\2\47\1\140\5\47\3\0\4\47"+
    "\4\0\2\47\1\50\1\0\1\47\2\0\1\47\1\137"+
    "\14\47\1\116\22\47\3\0\1\47\5\0\3\47\1\0"+
    "\1\50\2\47\1\140\5\47\3\0\4\47\4\0\2\47"+
    "\1\50\1\0\1\47\2\0\1\47\1\137\16\47\1\116"+
    "\20\47\3\0\1\47\5\0\3\47\1\0\1\50\2\47"+
    "\1\140\5\47\3\0\4\47\4\0\2\47\1\50\1\0"+
    "\1\47\2\0\1\47\1\137\5\47\1\171\31\47\3\0"+
    "\1\47\5\0\3\47\1\0\1\50\2\47\1\140\5\47"+
    "\3\0\4\47\4\0\2\47\1\50\1\0\1\47\2\0"+
    "\1\47\1\137\22\47\1\116\14\47\3\0\1\47\5\0"+
    "\3\47\1\0\1\50\2\47\1\140\5\47\3\0\4\47"+
    "\4\0\2\47\1\50\1\0\1\47\2\0\1\47\1\172"+
    "\37\47\3\0\1\47\5\0\3\47\1\0\1\50\2\47"+
    "\1\140\5\47\3\0\4\47\4\0\2\47\1\50\1\0"+
    "\1\47\2\0\1\47\1\137\21\47\1\116\15\47\3\0"+
    "\1\47\5\0\3\47\1\0\1\50\2\47\1\140\5\47"+
    "\3\0\4\47\4\0\2\47\1\50\1\0\1\47\2\0"+
    "\1\47\1\137\37\47\3\0\1\173\5\0\3\47\1\0"+
    "\1\50\2\47\1\140\5\47\3\0\4\47\4\0\2\47"+
    "\1\50\1\0\1\47\1\60\1\0\1\47\1\143\2\47"+
    "\3\65\2\47\7\65\1\144\4\65\1\47\1\65\1\47"+
    "\2\65\1\47\1\65\1\47\2\65\2\47\3\0\1\47"+
    "\5\0\3\47\1\0\1\50\2\47\1\140\3\47\2\65"+
    "\3\0\3\65\1\47\4\0\2\47\1\50\1\0\1\47"+
    "\1\60\1\0\1\47\1\143\2\47\3\65\2\47\14\65"+
    "\1\47\1\65\1\47\2\65\1\47\1\65\1\47\1\65"+
    "\1\174\2\47\3\0\1\47\5\0\3\47\1\0\1\50"+
    "\2\47\1\140\3\47\2\65\3\0\3\65\1\47\4\0"+
    "\2\47\1\50\1\0\1\47\1\60\1\0\1\47\1\143"+
    "\2\47\3\65\2\47\12\65\1\144\1\65\1\47\1\65"+
    "\1\47\2\65\1\47\1\65\1\47\2\65\2\47\3\0"+
    "\1\47\5\0\3\47\1\0\1\50\2\47\1\140\3\47"+
    "\2\65\3\0\3\65\1\47\4\0\2\47\1\50\1\0"+
    "\1\47\1\60\1\0\1\47\1\143\2\47\3\65\2\47"+
    "\14\65\1\47\1\65\1\47\2\65\1\47\1\65\1\47"+
    "\1\175\1\65\2\47\3\0\1\47\5\0\3\47\1\0"+
    "\1\50\2\47\1\140\3\47\2\65\3\0\3\65\1\47"+
    "\4\0\2\47\1\50\1\0\1\47\1\60\1\0\1\47"+
    "\1\143\2\47\3\65\2\47\14\65\1\47\1\65\1\47"+
    "\2\65\1\47\1\65\1\47\2\65\2\47\3\0\1\47"+
    "\5\0\3\47\1\0\1\50\2\47\1\140\3\47\2\65"+
    "\3\0\1\101\2\65\1\47\4\0\2\47\1\50\1\0"+
    "\1\47\1\60\1\0\1\47\1\143\2\47\3\65\2\47"+
    "\14\65\1\47\1\65\1\47\2\65\1\47\1\65\1\47"+
    "\2\65\2\47\3\0\1\47\5\0\3\47\1\0\1\50"+
    "\2\47\1\140\3\47\2\65\3\0\3\65\1\176\4\0"+
    "\1\134\3\0\45\134\1\0\1\177\1\134\4\0\5\134"+
    "\1\0\10\134\1\0\1\134\1\0\4\134\6\0\1\135"+
    "\47\0\1\200\1\201\11\0\1\135\23\0\1\202\3\0"+
    "\45\202\1\0\2\202\4\0\5\202\1\0\10\202\1\0"+
    "\1\202\1\0\4\202\11\0\1\203\3\0\2\204\2\205"+
    "\1\203\6\0\1\203\64\0\2\206\1\207\1\0\1\206"+
    "\2\0\1\206\1\0\37\206\3\0\1\206\5\0\3\206"+
    "\1\0\1\207\2\206\1\0\5\206\3\0\4\206\4\0"+
    "\2\210\1\142\1\0\1\210\2\0\1\210\1\0\37\210"+
    "\3\0\1\210\5\0\3\210\1\0\1\142\2\210\1\0"+
    "\5\210\3\0\4\210\4\0\2\141\1\142\1\0\1\141"+
    "\1\203\1\0\1\141\1\0\2\211\2\212\1\213\6\141"+
    "\1\213\23\141\3\0\1\141\5\0\3\141\1\0\1\142"+
    "\2\141\1\0\5\141\3\0\4\141\4\0\2\47\1\50"+
    "\1\0\1\47\1\60\1\0\1\47\1\214\2\47\3\65"+
    "\2\47\14\65\1\47\1\65\1\47\2\65\1\47\1\65"+
    "\1\47\2\65\2\47\3\0\1\47\5\0\3\47\1\0"+
    "\1\50\2\47\1\140\3\47\2\65\3\0\3\65\1\47"+
    "\4\0\2\47\1\50\1\0\1\47\1\60\1\0\1\47"+
    "\1\143\2\47\3\65\2\47\10\65\1\215\3\65\1\47"+
    "\1\65\1\47\2\65\1\47\1\65\1\47\2\65\2\47"+
    "\3\0\1\47\5\0\3\47\1\0\1\50\2\47\1\140"+
    "\3\47\2\65\3\0\3\65\1\47\3\0\1\45\1\47"+
    "\1\51\1\50\1\0\1\47\2\0\1\51\1\137\1\47"+
    "\1\51\1\47\2\51\1\47\1\51\1\47\1\51\1\47"+
    "\2\51\2\47\2\51\7\47\1\51\7\47\1\46\2\0"+
    "\1\47\5\0\2\51\1\216\1\0\1\50\2\47\1\140"+
    "\2\51\3\47\1\45\1\0\1\45\1\47\1\51\1\47"+
    "\1\51\4\0\2\47\1\50\1\0\1\47\2\0\1\47"+
    "\1\137\23\47\1\217\13\47\3\0\1\47\5\0\3\47"+
    "\1\0\1\50\2\47\1\140\5\47\3\0\4\47\4\0"+
    "\2\47\1\50\1\0\1\47\2\0\1\47\1\137\37\47"+
    "\3\0\1\47\5\0\3\47\1\0\1\50\2\47\1\140"+
    "\4\47\1\220\3\0\4\47\4\0\2\47\1\50\1\0"+
    "\1\47\1\60\1\0\1\47\1\143\2\47\3\65\2\47"+
    "\13\65\1\215\1\47\1\65\1\47\2\65\1\47\1\65"+
    "\1\47\2\65\2\47\3\0\1\47\5\0\3\47\1\0"+
    "\1\50\2\47\1\140\3\47\2\65\3\0\3\65\1\47"+
    "\4\0\2\47\1\50\1\0\1\47\1\60\1\0\1\47"+
    "\1\143\2\47\3\65\2\47\14\65\1\47\1\65\1\47"+
    "\1\221\1\65\1\47\1\65\1\47\2\65\2\47\3\0"+
    "\1\47\5\0\3\47\1\0\1\50\2\47\1\140\3\47"+
    "\2\65\3\0\3\65\1\47\4\0\2\47\1\50\1\0"+
    "\1\47\1\60\1\0\1\47\1\143\2\47\3\65\2\47"+
    "\5\65\1\221\6\65\1\47\1\65\1\47\2\65\1\47"+
    "\1\65\1\47\2\65\2\47\3\0\1\47\5\0\3\47"+
    "\1\0\1\50\2\47\1\140\3\47\2\65\3\0\3\65"+
    "\1\47\4\0\2\47\1\50\1\0\1\47\1\60\1\0"+
    "\1\47\1\143\2\47\3\65\2\47\6\65\1\222\5\65"+
    "\1\47\1\65\1\47\2\65\1\47\1\65\1\47\2\65"+
    "\2\47\3\0\1\47\5\0\3\47\1\0\1\50\2\47"+
    "\1\140\3\47\2\65\3\0\3\65\1\47\4\0\2\47"+
    "\1\50\1\0\1\47\2\0\1\47\1\223\37\47\3\0"+
    "\1\47\5\0\3\47\1\0\1\50\2\47\1\140\5\47"+
    "\3\0\4\47\3\0\1\45\1\47\1\51\1\50\1\0"+
    "\1\47\1\60\1\0\1\51\1\224\1\47\1\51\1\65"+
    "\2\67\1\47\1\51\1\65\1\67\1\65\2\67\2\65"+
    "\2\67\3\65\1\47\1\65\1\47\1\65\1\67\1\47"+
    "\1\65\1\47\2\65\2\47\1\46\2\0\1\47\5\0"+
    "\2\51\1\47\1\0\1\50\2\47\1\140\2\51\1\47"+
    "\2\65\1\45\1\0\1\45\1\65\1\67\1\65\1\51"+
    "\4\0\2\47\1\50\1\0\1\47\1\60\1\0\1\47"+
    "\1\143\2\47\3\65\2\47\3\65\1\225\10\65\1\47"+
    "\1\65\1\47\2\65\1\47\1\65\1\47\2\65\2\47"+
    "\3\0\1\47\5\0\3\47\1\0\1\50\2\47\1\140"+
    "\3\47\2\65\3\0\3\65\1\47\4\0\2\47\1\50"+
    "\1\0\1\47\1\60\1\0\1\47\1\224\2\47\3\65"+
    "\2\47\14\65\1\47\1\65\1\47\2\65\1\47\1\65"+
    "\1\47\2\65\2\47\3\0\1\47\5\0\3\47\1\0"+
    "\1\50\2\47\1\140\3\47\2\65\3\0\3\65\1\47"+
    "\6\0\1\161\47\0\1\226\12\0\1\161\23\0\1\112"+
    "\3\0\45\112\1\227\2\112\4\0\1\163\4\112\1\0"+
    "\10\112\1\0\1\112\1\0\4\112\56\0\1\230\36\0"+
    "\1\113\3\0\45\113\1\0\2\113\1\231\3\0\1\165"+
    "\4\113\1\0\10\113\1\0\1\113\1\0\4\113\6\0"+
    "\1\166\50\0\1\232\11\0\1\166\23\0\2\47\1\50"+
    "\1\0\1\47\2\0\1\47\1\137\37\47\3\0\1\47"+
    "\5\0\3\47\1\0\1\50\2\47\1\140\1\47\1\123"+
    "\3\47\3\0\4\47\4\0\2\233\1\234\1\0\1\233"+
    "\1\203\1\0\1\233\1\0\2\235\2\236\1\237\6\233"+
    "\1\237\23\233\3\0\1\233\5\0\3\233\1\0\1\234"+
    "\2\233\1\0\5\233\3\0\4\233\4\0\2\47\1\50"+
    "\1\0\1\47\2\0\1\47\1\137\37\47\3\0\1\47"+
    "\5\0\3\47\1\0\1\50\2\47\1\140\2\47\1\123"+
    "\2\47\3\0\4\47\4\0\2\233\2\0\1\233\1\203"+
    "\1\0\1\233\1\0\2\235\2\236\1\237\6\233\1\237"+
    "\23\233\3\0\1\233\5\0\3\233\2\0\2\233\1\0"+
    "\5\233\3\0\4\233\4\0\2\47\1\50\1\0\1\47"+
    "\2\0\1\47\1\137\30\47\1\240\6\47\3\0\1\47"+
    "\5\0\3\47\1\0\1\50\2\47\1\140\5\47\3\0"+
    "\4\47\4\0\2\47\1\50\1\0\1\47\1\60\1\0"+
    "\1\47\1\143\2\47\3\65\1\47\1\241\14\65\1\47"+
    "\1\65\1\47\2\65\1\47\1\65\1\47\2\65\2\47"+
    "\3\0\1\47\5\0\3\47\1\0\1\50\2\47\1\140"+
    "\3\47\2\65\3\0\3\65\1\47\4\0\2\47\1\50"+
    "\1\0\1\47\1\60\1\0\1\47\1\143\2\47\3\65"+
    "\2\47\14\65\1\47\1\65\1\47\2\65\1\47\1\65"+
    "\1\47\2\65\2\47\3\0\1\47\5\0\1\47\1\242"+
    "\1\47\1\0\1\50\2\47\1\140\3\47\2\65\3\0"+
    "\3\65\1\47\4\0\2\47\1\50\1\0\1\47\2\0"+
    "\1\47\1\137\37\47\3\0\1\47\5\0\3\47\1\0"+
    "\1\50\2\47\1\140\3\47\1\220\1\47\3\0\4\47"+
    "\56\0\1\200\110\0\1\243\36\0\1\202\3\0\45\202"+
    "\1\244\2\202\4\0\5\202\1\0\10\202\1\0\1\202"+
    "\1\0\4\202\11\0\1\203\2\0\1\245\2\204\2\205"+
    "\1\203\6\0\1\203\71\0\1\204\2\0\1\245\2\204"+
    "\2\0\1\204\6\0\1\204\71\0\1\205\2\0\1\245"+
    "\2\0\3\205\6\0\1\205\66\0\1\207\62\0\1\207"+
    "\23\0\2\210\2\0\1\210\2\0\1\210\1\0\37\210"+
    "\3\0\1\210\5\0\3\210\2\0\2\210\1\0\5\210"+
    "\3\0\4\210\4\0\2\206\1\207\1\0\1\206\1\204"+
    "\1\0\1\206\1\245\2\246\2\206\1\246\6\206\1\246"+
    "\23\206\3\0\1\206\5\0\3\206\1\0\1\207\2\206"+
    "\1\0\5\206\3\0\4\206\4\0\2\206\1\207\1\0"+
    "\1\206\1\205\1\0\1\206\1\245\2\206\3\247\6\206"+
    "\1\247\23\206\3\0\1\206\5\0\3\206\1\0\1\207"+
    "\2\206\1\0\5\206\3\0\4\206\4\0\2\206\1\207"+
    "\1\0\1\206\1\203\1\0\1\206\1\245\2\246\2\247"+
    "\1\250\6\206\1\250\23\206\3\0\1\206\5\0\3\206"+
    "\1\0\1\207\2\206\1\0\5\206\3\0\4\206\4\0"+
    "\2\141\1\142\1\0\1\251\1\252\1\0\1\141\1\0"+
    "\2\253\2\212\1\254\2\251\2\141\2\251\1\254\1\141"+
    "\3\251\1\141\1\251\4\141\1\251\10\141\3\0\1\251"+
    "\5\0\1\141\1\251\1\141\1\0\1\142\2\141\1\0"+
    "\1\251\2\141\2\251\3\0\1\251\3\141\4\0\2\47"+
    "\1\50\1\0\1\47\1\60\1\0\1\47\1\255\2\47"+
    "\3\65\2\47\14\65\1\47\1\65\1\47\2\65\1\47"+
    "\1\65\1\47\2\65\2\47\3\0\1\47\5\0\3\47"+
    "\1\0\1\50\2\47\1\140\3\47\2\65\3\0\3\65"+
    "\1\47\4\0\2\47\1\50\1\0\1\47\2\0\1\47"+
    "\1\137\37\47\1\256\2\0\1\47\5\0\3\47\1\0"+
    "\1\50\2\47\1\140\5\47\3\0\4\47\4\0\2\47"+
    "\1\50\1\0\1\47\2\0\1\47\1\257\37\47\3\0"+
    "\1\47\5\0\3\47\1\0\1\50\2\47\1\140\5\47"+
    "\3\0\4\47\4\0\2\47\1\50\1\0\1\47\2\0"+
    "\1\47\1\260\37\47\3\0\1\47\5\0\3\47\1\0"+
    "\1\50\2\47\1\140\5\47\3\0\4\47\4\0\2\47"+
    "\1\50\1\0\1\47\1\60\1\0\1\47\1\261\2\47"+
    "\3\65\2\47\14\65\1\47\1\65\1\47\2\65\1\47"+
    "\1\65\1\47\2\65\2\47\3\0\1\47\5\0\3\47"+
    "\1\0\1\50\2\47\1\140\3\47\2\65\3\0\3\65"+
    "\1\47\4\0\2\47\1\50\1\0\1\47\1\60\1\0"+
    "\1\47\1\143\2\47\3\65\2\47\14\65\1\47\1\65"+
    "\1\47\2\65\1\47\1\65\1\47\2\65\1\47\1\262"+
    "\3\0\1\47\5\0\3\47\1\0\1\50\2\47\1\140"+
    "\3\47\2\65\3\0\3\65\1\47\10\0\1\263\1\264"+
    "\3\0\2\265\2\205\1\264\2\263\2\0\2\263\1\264"+
    "\1\0\3\263\1\0\1\263\4\0\1\263\13\0\1\263"+
    "\6\0\1\263\6\0\1\263\2\0\2\263\1\266\2\0"+
    "\1\263\7\0\2\141\1\142\1\0\1\267\1\270\1\0"+
    "\1\141\1\0\2\271\2\212\1\272\2\267\2\141\2\267"+
    "\1\273\1\274\2\275\1\267\1\141\1\267\4\141\1\267"+
    "\10\141\3\0\1\267\5\0\1\141\1\267\1\141\1\0"+
    "\1\142\2\141\1\0\1\267\2\141\2\267\1\276\2\0"+
    "\1\267\3\141\4\0\2\47\1\50\1\0\1\47\1\60"+
    "\1\0\1\47\1\143\2\47\3\65\2\47\14\65\1\47"+
    "\1\65\1\47\2\65\1\47\1\65\1\47\2\65\1\277"+
    "\1\47\3\0\1\47\5\0\3\47\1\0\1\50\2\47"+
    "\1\140\3\47\2\65\3\0\3\65\1\47\14\0\1\300"+
    "\100\0\2\301\1\302\1\0\1\301\2\0\1\301\1\0"+
    "\37\301\3\0\1\301\5\0\3\301\1\0\1\302\2\301"+
    "\1\0\5\301\3\0\4\301\4\0\2\303\1\234\1\0"+
    "\1\303\2\0\1\303\1\0\37\303\3\0\1\303\5\0"+
    "\3\303\1\0\1\234\2\303\1\0\5\303\3\0\4\303"+
    "\4\0\2\301\1\302\1\0\1\301\1\204\1\0\1\301"+
    "\1\245\2\304\2\301\1\304\6\301\1\304\23\301\3\0"+
    "\1\301\5\0\3\301\1\0\1\302\2\301\1\0\5\301"+
    "\3\0\4\301\4\0\2\301\1\302\1\0\1\301\1\205"+
    "\1\0\1\301\1\245\2\301\3\305\6\301\1\305\23\301"+
    "\3\0\1\301\5\0\3\301\1\0\1\302\2\301\1\0"+
    "\5\301\3\0\4\301\4\0\2\301\1\302\1\0\1\301"+
    "\1\203\1\0\1\301\1\245\2\304\2\305\1\306\6\301"+
    "\1\306\23\301\3\0\1\301\5\0\3\301\1\0\1\302"+
    "\2\301\1\0\5\301\3\0\4\301\4\0\2\47\1\50"+
    "\1\0\1\47\2\0\1\47\1\307\37\47\3\0\1\47"+
    "\5\0\3\47\1\0\1\50\2\47\1\140\5\47\3\0"+
    "\4\47\4\0\2\47\1\50\1\0\1\47\2\0\1\47"+
    "\1\137\32\47\1\117\4\47\3\0\1\47\5\0\3\47"+
    "\1\0\1\50\2\47\1\140\5\47\3\0\4\47\4\0"+
    "\2\47\1\50\1\0\1\47\2\0\1\47\1\137\25\47"+
    "\1\122\11\47\3\0\1\47\5\0\3\47\1\0\1\50"+
    "\2\47\1\140\5\47\3\0\4\47\56\0\1\310\40\0"+
    "\1\311\46\0\1\312\2\0\1\313\10\0\1\311\23\0"+
    "\2\206\1\207\1\0\1\314\1\315\1\0\1\206\1\0"+
    "\2\314\2\206\3\314\2\206\3\314\1\206\3\314\1\206"+
    "\1\314\4\206\1\314\10\206\3\0\1\314\5\0\1\206"+
    "\1\314\1\206\1\0\1\207\2\206\1\0\1\314\2\206"+
    "\2\314\3\0\1\314\3\206\10\0\1\316\1\317\2\0"+
    "\1\245\2\320\2\205\1\252\2\316\2\0\2\316\1\252"+
    "\1\0\3\316\1\0\1\316\4\0\1\316\13\0\1\316"+
    "\6\0\1\316\6\0\1\316\2\0\2\316\3\0\1\316"+
    "\7\0\2\206\1\207\1\0\1\314\1\321\1\0\1\206"+
    "\1\245\2\322\2\206\1\322\2\314\2\206\2\314\1\322"+
    "\1\206\3\314\1\206\1\314\4\206\1\314\10\206\3\0"+
    "\1\314\5\0\1\206\1\314\1\206\1\0\1\207\2\206"+
    "\1\0\1\314\2\206\2\314\3\0\1\314\3\206\4\0"+
    "\2\206\1\207\1\0\1\314\1\317\1\0\1\206\1\245"+
    "\2\322\2\247\1\323\2\314\2\206\2\314\1\323\1\206"+
    "\3\314\1\206\1\314\4\206\1\314\10\206\3\0\1\314"+
    "\5\0\1\206\1\314\1\206\1\0\1\207\2\206\1\0"+
    "\1\314\2\206\2\314\3\0\1\314\3\206\4\0\2\141"+
    "\1\142\1\0\1\141\1\203\1\0\1\141\1\0\2\211"+
    "\2\212\1\213\6\141\1\213\5\141\1\324\15\141\3\0"+
    "\1\141\5\0\3\141\1\0\1\142\2\141\1\0\5\141"+
    "\3\0\4\141\6\0\1\325\62\0\1\325\27\0\1\326"+
    "\1\327\3\0\2\330\2\205\1\327\2\326\2\0\2\326"+
    "\1\327\1\0\3\326\1\0\1\326\4\0\1\326\13\0"+
    "\1\326\6\0\1\326\6\0\1\326\2\0\2\326\3\0"+
    "\1\326\13\0\1\316\1\252\3\0\2\320\2\205\1\252"+
    "\2\316\2\0\2\316\1\252\1\0\3\316\1\0\1\316"+
    "\4\0\1\316\13\0\1\316\6\0\1\316\6\0\1\316"+
    "\2\0\2\316\3\0\1\316\7\0\2\141\1\142\1\0"+
    "\1\141\1\203\1\0\1\141\1\0\2\211\2\212\1\213"+
    "\6\141\1\213\2\141\1\331\20\141\3\0\1\141\5\0"+
    "\3\141\1\0\1\142\2\141\1\0\5\141\3\0\4\141"+
    "\4\0\2\47\1\50\1\0\1\47\2\0\1\47\1\332"+
    "\37\47\3\0\1\47\5\0\3\47\1\0\1\50\2\47"+
    "\1\140\5\47\3\0\4\47\10\0\1\263\1\333\3\0"+
    "\2\263\2\0\3\263\2\0\3\263\1\0\3\263\1\0"+
    "\1\263\4\0\1\263\13\0\1\263\6\0\1\263\6\0"+
    "\1\263\2\0\2\263\3\0\1\263\13\0\1\263\1\334"+
    "\2\0\1\245\2\265\2\205\1\264\2\263\2\0\2\263"+
    "\1\264\1\0\3\263\1\0\1\263\4\0\1\263\13\0"+
    "\1\263\6\0\1\263\6\0\1\263\2\0\2\263\3\0"+
    "\1\263\13\0\1\263\1\335\2\0\1\245\2\265\2\0"+
    "\1\265\2\263\2\0\2\263\1\265\1\0\3\263\1\0"+
    "\1\263\4\0\1\263\13\0\1\263\6\0\1\263\6\0"+
    "\1\263\2\0\2\263\3\0\1\263\13\0\2\336\3\0"+
    "\2\336\2\0\3\336\2\0\3\336\1\0\3\336\1\0"+
    "\1\336\4\0\1\336\13\0\1\336\6\0\1\336\6\0"+
    "\1\336\2\0\2\336\3\0\1\336\7\0\2\206\1\207"+
    "\1\0\1\337\1\340\1\0\1\206\1\0\2\337\2\206"+
    "\3\337\2\206\3\337\1\206\3\337\1\206\1\337\4\206"+
    "\1\337\10\206\3\0\1\337\5\0\1\206\1\337\1\206"+
    "\1\0\1\207\2\206\1\0\1\337\2\206\2\337\3\0"+
    "\1\337\3\206\10\0\1\341\1\342\2\0\1\245\2\343"+
    "\2\205\1\344\2\341\2\0\2\341\1\270\1\345\2\346"+
    "\1\341\1\0\1\341\4\0\1\341\13\0\1\341\6\0"+
    "\1\341\6\0\1\341\2\0\2\341\3\0\1\341\7\0"+
    "\2\206\1\207\1\0\1\337\1\347\1\0\1\206\1\245"+
    "\2\350\2\206\1\350\2\337\2\206\2\337\1\350\1\206"+
    "\3\337\1\206\1\337\4\206\1\337\10\206\3\0\1\337"+
    "\5\0\1\206\1\337\1\206\1\0\1\207\2\206\1\0"+
    "\1\337\2\206\2\337\3\0\1\337\3\206\4\0\2\206"+
    "\1\207\1\0\1\337\1\351\1\0\1\206\1\245\2\350"+
    "\2\247\1\352\2\337\2\206\2\337\1\352\1\206\3\337"+
    "\1\206\1\337\4\206\1\337\10\206\3\0\1\337\5\0"+
    "\1\206\1\337\1\206\1\0\1\207\2\206\1\0\1\337"+
    "\2\206\2\337\3\0\1\337\3\206\4\0\2\206\1\207"+
    "\1\0\1\337\1\342\1\0\1\206\1\245\2\350\2\247"+
    "\1\352\2\337\2\206\2\337\1\353\1\354\2\355\1\337"+
    "\1\206\1\337\4\206\1\337\10\206\3\0\1\337\5\0"+
    "\1\206\1\337\1\206\1\0\1\207\2\206\1\0\1\337"+
    "\2\206\2\337\3\0\1\337\3\206\4\0\2\206\1\207"+
    "\1\0\1\206\1\345\1\0\1\206\1\0\13\206\4\354"+
    "\20\206\3\0\1\206\5\0\3\206\1\0\1\207\2\206"+
    "\1\0\5\206\3\0\4\206\4\0\2\206\1\207\1\0"+
    "\1\337\1\356\1\0\1\206\1\0\2\337\2\206\3\337"+
    "\2\206\2\337\1\355\1\354\2\355\1\337\1\206\1\337"+
    "\4\206\1\337\10\206\3\0\1\337\5\0\1\206\1\337"+
    "\1\206\1\0\1\207\2\206\1\0\1\337\2\206\2\337"+
    "\3\0\1\337\3\206\10\0\2\357\3\0\2\357\2\0"+
    "\3\357\2\0\3\357\1\0\3\357\1\0\1\357\4\0"+
    "\1\357\13\0\1\357\6\0\1\357\6\0\1\357\2\0"+
    "\2\357\3\0\1\357\7\0\2\47\1\50\1\0\1\47"+
    "\2\0\1\47\1\360\37\47\3\0\1\47\5\0\3\47"+
    "\1\0\1\50\2\47\1\140\5\47\3\0\4\47\61\0"+
    "\1\361\33\0\2\301\1\302\1\0\1\301\2\0\1\301"+
    "\1\0\37\301\3\0\1\301\5\0\3\301\1\0\1\302"+
    "\2\301\1\362\5\301\3\0\4\301\6\0\1\302\62\0"+
    "\1\302\2\0\1\362\20\0\2\303\2\0\1\303\2\0"+
    "\1\303\1\0\37\303\3\0\1\303\5\0\3\303\2\0"+
    "\2\303\1\362\5\303\3\0\4\303\4\0\2\301\1\302"+
    "\1\0\1\301\1\204\1\0\1\301\1\245\2\304\2\301"+
    "\1\304\6\301\1\304\23\301\3\0\1\301\5\0\3\301"+
    "\1\0\1\302\2\301\1\362\5\301\3\0\4\301\4\0"+
    "\2\301\1\302\1\0\1\301\1\205\1\0\1\301\1\245"+
    "\2\301\3\305\6\301\1\305\23\301\3\0\1\301\5\0"+
    "\3\301\1\0\1\302\2\301\1\362\5\301\3\0\4\301"+
    "\4\0\2\301\1\302\1\0\1\301\1\203\1\0\1\301"+
    "\1\245\2\304\2\305\1\306\6\301\1\306\23\301\3\0"+
    "\1\301\5\0\3\301\1\0\1\302\2\301\1\362\5\301"+
    "\3\0\4\301\10\0\1\326\1\327\3\0\2\330\2\205"+
    "\1\327\2\326\2\0\2\326\1\327\1\0\3\326\1\0"+
    "\1\326\4\0\1\326\13\0\1\326\6\0\1\326\6\0"+
    "\1\326\2\0\2\326\1\363\2\0\1\326\11\0\1\311"+
    "\62\0\1\311\23\0\1\364\3\0\45\364\1\0\2\364"+
    "\4\0\5\364\1\0\10\364\1\0\1\364\1\0\4\364"+
    "\4\0\1\365\3\0\45\365\1\0\2\365\4\0\5\365"+
    "\1\0\10\365\1\0\1\365\1\0\4\365\10\0\1\316"+
    "\1\315\3\0\2\316\2\0\3\316\2\0\3\316\1\0"+
    "\3\316\1\0\1\316\4\0\1\316\13\0\1\316\6\0"+
    "\1\316\6\0\1\316\2\0\2\316\1\366\2\0\1\316"+
    "\13\0\1\316\1\315\3\0\2\316\2\0\3\316\2\0"+
    "\3\316\1\0\3\316\1\0\1\316\4\0\1\316\13\0"+
    "\1\316\6\0\1\316\6\0\1\316\2\0\2\316\3\0"+
    "\1\316\13\0\1\316\1\317\2\0\1\245\2\320\2\205"+
    "\1\252\2\316\2\0\2\316\1\252\1\0\3\316\1\0"+
    "\1\316\4\0\1\316\13\0\1\316\6\0\1\316\6\0"+
    "\1\316\2\0\2\316\1\366\2\0\1\316\13\0\1\316"+
    "\1\321\2\0\1\245\2\320\2\0\1\320\2\316\2\0"+
    "\2\316\1\320\1\0\3\316\1\0\1\316\4\0\1\316"+
    "\13\0\1\316\6\0\1\316\6\0\1\316\2\0\2\316"+
    "\3\0\1\316\13\0\1\316\1\321\2\0\1\245\2\320"+
    "\2\0\1\320\2\316\2\0\2\316\1\320\1\0\3\316"+
    "\1\0\1\316\4\0\1\316\13\0\1\316\6\0\1\316"+
    "\6\0\1\316\2\0\2\316\1\366\2\0\1\316\7\0"+
    "\2\206\1\207\1\0\1\206\2\0\1\206\1\0\22\206"+
    "\1\367\14\206\3\0\1\206\5\0\3\206\1\0\1\207"+
    "\2\206\1\0\5\206\3\0\4\206\6\0\1\325\47\0"+
    "\1\370\12\0\1\325\27\0\1\326\1\371\3\0\2\326"+
    "\2\0\3\326\2\0\3\326\1\0\3\326\1\0\1\326"+
    "\4\0\1\326\13\0\1\326\6\0\1\326\6\0\1\326"+
    "\2\0\2\326\3\0\1\326\13\0\1\326\1\372\2\0"+
    "\1\245\2\330\2\205\1\327\2\326\2\0\2\326\1\327"+
    "\1\0\3\326\1\0\1\326\4\0\1\326\13\0\1\326"+
    "\6\0\1\326\6\0\1\326\2\0\2\326\3\0\1\326"+
    "\13\0\1\326\1\373\2\0\1\245\2\330\2\0\1\330"+
    "\2\326\2\0\2\326\1\330\1\0\3\326\1\0\1\326"+
    "\4\0\1\326\13\0\1\326\6\0\1\326\6\0\1\326"+
    "\2\0\2\326\3\0\1\326\7\0\2\206\1\207\1\0"+
    "\1\206\2\0\1\206\1\0\14\206\1\374\22\206\3\0"+
    "\1\206\5\0\3\206\1\0\1\207\2\206\1\0\5\206"+
    "\3\0\4\206\11\0\1\203\3\0\2\204\2\205\1\203"+
    "\6\0\1\203\2\0\1\375\63\0\1\376\1\0\1\263"+
    "\1\333\3\0\2\263\2\0\3\263\2\0\1\263\1\377"+
    "\1\263\1\0\1\u0100\2\263\1\0\1\263\4\0\1\263"+
    "\13\0\1\263\6\0\1\263\1\0\1\u0101\1\376\3\0"+
    "\1\263\2\0\2\263\3\0\1\263\11\0\1\376\1\0"+
    "\1\263\1\334\2\0\1\245\2\265\2\205\1\264\2\263"+
    "\2\0\1\263\1\377\1\264\1\0\1\u0100\2\263\1\0"+
    "\1\263\4\0\1\263\13\0\1\263\6\0\1\263\1\0"+
    "\1\u0101\1\376\3\0\1\263\2\0\2\263\3\0\1\263"+
    "\11\0\1\376\1\0\1\263\1\335\2\0\1\245\2\265"+
    "\2\0\1\265\2\263\2\0\1\263\1\377\1\265\1\0"+
    "\1\u0100\2\263\1\0\1\263\4\0\1\263\13\0\1\263"+
    "\6\0\1\263\1\0\1\u0101\1\376\3\0\1\263\2\0"+
    "\2\263\3\0\1\263\13\0\2\336\3\0\2\336\2\0"+
    "\3\336\2\0\3\336\1\0\3\336\1\0\1\336\4\0"+
    "\1\336\13\0\1\336\6\0\1\336\6\0\1\336\2\0"+
    "\2\336\1\0\1\u0102\1\0\1\336\11\0\1\376\1\0"+
    "\1\341\1\340\3\0\2\341\2\0\3\341\2\0\3\341"+
    "\1\0\3\341\1\0\1\341\4\0\1\341\13\0\1\341"+
    "\6\0\1\341\1\0\1\u0101\1\376\3\0\1\341\2\0"+
    "\2\341\1\366\2\0\1\341\13\0\1\341\1\340\3\0"+
    "\2\341\2\0\3\341\2\0\3\341\1\0\3\341\1\0"+
    "\1\341\4\0\1\341\13\0\1\341\6\0\1\341\6\0"+
    "\1\341\2\0\2\341\3\0\1\341\11\0\1\376\1\0"+
    "\1\341\1\342\2\0\1\245\2\343\2\205\1\344\2\341"+
    "\2\0\2\341\1\270\1\345\2\346\1\341\1\0\1\341"+
    "\4\0\1\341\13\0\1\341\6\0\1\341\1\0\1\u0101"+
    "\1\376\3\0\1\341\2\0\2\341\1\366\2\0\1\341"+
    "\13\0\1\341\1\347\2\0\1\245\2\343\2\0\1\343"+
    "\2\341\2\0\2\341\1\343\1\0\3\341\1\0\1\341"+
    "\4\0\1\341\13\0\1\341\6\0\1\341\6\0\1\341"+
    "\2\0\2\341\3\0\1\341\13\0\1\341\1\351\2\0"+
    "\1\245\2\343\2\205\1\344\2\341\2\0\2\341\1\344"+
    "\1\0\3\341\1\0\1\341\4\0\1\341\13\0\1\341"+
    "\6\0\1\341\6\0\1\341\2\0\2\341\3\0\1\341"+
    "\14\0\1\345\16\0\4\345\65\0\1\341\1\356\3\0"+
    "\2\341\2\0\3\341\2\0\2\341\1\346\1\345\2\346"+
    "\1\341\1\0\1\341\4\0\1\341\13\0\1\341\6\0"+
    "\1\341\6\0\1\341\2\0\2\341\3\0\1\341\11\0"+
    "\1\376\1\0\1\341\1\347\2\0\1\245\2\343\2\0"+
    "\1\343\2\341\2\0\2\341\1\343\1\0\3\341\1\0"+
    "\1\341\4\0\1\341\13\0\1\341\6\0\1\341\1\0"+
    "\1\u0101\1\376\3\0\1\341\2\0\2\341\1\366\2\0"+
    "\1\341\11\0\1\376\1\0\1\341\1\351\2\0\1\245"+
    "\2\343\2\205\1\344\2\341\2\0\2\341\1\344\1\0"+
    "\3\341\1\0\1\341\4\0\1\341\13\0\1\341\6\0"+
    "\1\341\1\0\1\u0101\1\376\3\0\1\341\2\0\2\341"+
    "\1\366\2\0\1\341\11\0\1\376\1\0\1\341\1\356"+
    "\3\0\2\341\2\0\3\341\2\0\2\341\1\346\1\345"+
    "\2\346\1\341\1\0\1\341\4\0\1\341\13\0\1\341"+
    "\6\0\1\341\1\0\1\u0101\1\376\3\0\1\341\2\0"+
    "\2\341\1\366\2\0\1\341\13\0\2\357\3\0\2\357"+
    "\2\0\3\357\2\0\3\357\1\0\3\357\1\0\1\357"+
    "\4\0\1\357\13\0\1\357\6\0\1\357\6\0\1\357"+
    "\2\0\2\357\1\0\1\u0103\1\0\1\357\14\0\1\203"+
    "\3\0\2\204\2\205\1\203\6\0\1\203\5\0\1\u0104"+
    "\66\0\1\u0105\104\0\2\u0106\3\0\2\u0106\2\0\3\u0106"+
    "\2\0\3\u0106\1\0\3\u0106\1\0\1\u0106\4\0\1\u0106"+
    "\13\0\1\u0106\6\0\1\u0106\6\0\1\u0106\2\0\2\u0106"+
    "\3\0\1\u0106\7\0\1\364\3\0\45\364\1\u0107\2\364"+
    "\4\0\5\364\1\0\10\364\1\0\1\364\1\0\4\364"+
    "\4\0\1\365\3\0\45\365\1\0\2\365\1\u0107\3\0"+
    "\5\365\1\0\10\365\1\0\1\365\1\0\4\365\10\0"+
    "\2\u0108\3\0\2\u0108\2\0\3\u0108\2\0\3\u0108\1\0"+
    "\3\u0108\1\0\1\u0108\4\0\1\u0108\13\0\1\u0108\6\0"+
    "\1\u0108\6\0\1\u0108\2\0\2\u0108\3\0\1\u0108\7\0"+
    "\2\206\1\207\1\0\1\206\2\0\1\206\1\0\23\206"+
    "\1\u0109\13\206\3\0\1\206\5\0\3\206\1\0\1\207"+
    "\2\206\1\0\5\206\3\0\4\206\56\0\1\370\42\0"+
    "\1\u010a\1\u010b\3\0\2\u010a\2\0\3\u010a\2\0\3\u010a"+
    "\1\0\3\u010a\1\0\1\u010a\4\0\1\u010a\13\0\1\u010a"+
    "\6\0\1\u010a\6\0\1\u010a\2\0\2\u010a\1\366\2\0"+
    "\1\u010a\13\0\1\u010a\1\u010c\2\0\1\245\2\u010d\2\205"+
    "\1\u010e\2\u010a\2\0\2\u010a\1\u010e\1\0\3\u010a\1\0"+
    "\1\u010a\4\0\1\u010a\13\0\1\u010a\6\0\1\u010a\6\0"+
    "\1\u010a\2\0\2\u010a\1\366\2\0\1\u010a\13\0\1\u010a"+
    "\1\u010f\2\0\1\245\2\u010d\2\0\1\u010d\2\u010a\2\0"+
    "\2\u010a\1\u010d\1\0\3\u010a\1\0\1\u010a\4\0\1\u010a"+
    "\13\0\1\u010a\6\0\1\u010a\6\0\1\u010a\2\0\2\u010a"+
    "\1\366\2\0\1\u010a\7\0\2\206\1\207\1\0\1\206"+
    "\2\0\1\206\1\0\30\206\1\u0110\6\206\3\0\1\206"+
    "\5\0\3\206\1\0\1\207\2\206\1\0\5\206\3\0"+
    "\4\206\31\0\1\u0111\63\0\2\u0112\1\376\1\0\1\u0113"+
    "\1\u0114\1\0\1\u0112\1\0\2\u0113\35\u0112\3\0\1\u0113"+
    "\5\0\3\u0112\1\0\1\376\2\u0112\1\0\5\u0112\3\0"+
    "\4\u0112\10\0\1\263\1\333\3\0\2\263\2\0\3\263"+
    "\2\0\3\263\1\0\3\263\1\0\1\263\4\0\1\263"+
    "\13\0\1\263\6\0\1\263\6\0\1\263\2\0\1\263"+
    "\1\u0115\3\0\1\263\13\0\1\263\1\333\3\0\2\263"+
    "\2\0\3\263\2\0\3\263\1\0\3\263\1\0\1\263"+
    "\4\0\1\263\13\0\1\263\6\0\1\263\6\0\1\263"+
    "\2\0\1\u0115\1\263\3\0\1\263\11\0\1\u0116\62\0"+
    "\1\u0116\27\0\2\u0117\3\0\2\u0117\2\0\3\u0117\2\0"+
    "\3\u0117\1\0\3\u0117\1\0\1\u0117\4\0\1\u0117\13\0"+
    "\1\u0117\6\0\1\u0117\6\0\1\u0117\2\0\2\u0117\3\0"+
    "\1\u0117\13\0\2\u0118\3\0\2\u0118\2\0\3\u0118\2\0"+
    "\3\u0118\1\0\3\u0118\1\0\1\u0118\4\0\1\u0118\13\0"+
    "\1\u0118\6\0\1\u0118\6\0\1\u0118\2\0\2\u0118\3\0"+
    "\1\u0118\42\0\1\u0119\125\0\1\u011a\44\0\2\u0106\3\0"+
    "\2\u0106\2\0\3\u0106\2\0\3\u0106\1\0\3\u0106\1\0"+
    "\1\u0106\4\0\1\u0106\13\0\1\u0106\6\0\1\u0106\6\0"+
    "\1\u0106\2\0\2\u0106\1\0\1\u011b\1\0\1\u0106\13\0"+
    "\2\u0108\3\0\2\u0108\2\0\3\u0108\2\0\3\u0108\1\0"+
    "\3\u0108\1\0\1\u0108\4\0\1\u0108\13\0\1\u0108\6\0"+
    "\1\u0108\6\0\1\u0108\2\0\2\u0108\1\0\1\u011c\1\0"+
    "\1\u0108\7\0\2\206\1\207\1\0\1\206\2\0\1\206"+
    "\1\0\24\206\1\u011d\12\206\3\0\1\206\5\0\3\206"+
    "\1\0\1\207\2\206\1\0\5\206\3\0\4\206\10\0"+
    "\1\u010a\1\u010b\3\0\2\u010a\2\0\3\u010a\2\0\3\u010a"+
    "\1\0\3\u010a\1\0\1\u010a\4\0\1\u010a\13\0\1\u010a"+
    "\6\0\1\u010a\6\0\1\u010a\2\0\2\u010a\3\0\1\u010a"+
    "\13\0\1\u010a\1\u010f\2\0\1\245\2\u010d\2\0\1\u010d"+
    "\2\u010a\2\0\2\u010a\1\u010d\1\0\3\u010a\1\0\1\u010a"+
    "\4\0\1\u010a\13\0\1\u010a\6\0\1\u010a\6\0\1\u010a"+
    "\2\0\2\u010a\3\0\1\u010a\13\0\1\u010a\1\u010c\2\0"+
    "\1\245\2\u010d\2\205\1\u010e\2\u010a\2\0\2\u010a\1\u010e"+
    "\1\0\3\u010a\1\0\1\u010a\4\0\1\u010a\13\0\1\u010a"+
    "\6\0\1\u010a\6\0\1\u010a\2\0\2\u010a\3\0\1\u010a"+
    "\7\0\2\206\1\207\1\0\1\206\2\0\1\206\1\0"+
    "\31\206\1\u011e\5\206\3\0\1\206\5\0\3\206\1\0"+
    "\1\207\2\206\1\0\5\206\3\0\4\206\45\0\1\u011f"+
    "\47\0\2\u0112\2\0\1\u0113\1\u0114\1\0\1\u0112\1\0"+
    "\37\u0112\3\0\1\u0113\5\0\3\u0112\2\0\2\u0112\1\0"+
    "\5\u0112\3\0\4\u0112\10\0\2\u0114\45\0\1\u0114\41\0"+
    "\2\u0117\3\0\2\u0117\2\0\3\u0117\2\0\3\u0117\1\0"+
    "\3\u0117\1\0\1\u0117\4\0\1\u0117\13\0\1\u0117\6\0"+
    "\1\u0117\6\0\1\u0117\2\0\2\u0117\2\0\1\u0120\1\u0117"+
    "\13\0\2\u0118\3\0\2\u0118\2\0\3\u0118\2\0\3\u0118"+
    "\1\0\3\u0118\1\0\1\u0118\4\0\1\u0118\13\0\1\u0118"+
    "\6\0\1\u0118\6\0\1\u0118\2\0\2\u0118\2\0\1\u0121"+
    "\1\u0118\43\0\1\u0122\125\0\1\u0123\43\0\2\u0124\3\0"+
    "\2\u0124\2\0\3\u0124\2\0\3\u0124\1\0\3\u0124\1\0"+
    "\1\u0124\4\0\1\u0124\13\0\1\u0124\6\0\1\u0124\6\0"+
    "\1\u0124\2\0\2\u0124\3\0\1\u0124\13\0\2\u0125\3\0"+
    "\2\u0125\2\0\3\u0125\2\0\3\u0125\1\0\3\u0125\1\0"+
    "\1\u0125\4\0\1\u0125\13\0\1\u0125\6\0\1\u0125\6\0"+
    "\1\u0125\2\0\2\u0125\3\0\1\u0125\7\0\2\206\1\207"+
    "\1\0\1\206\2\0\1\206\1\0\22\206\1\u0126\14\206"+
    "\3\0\1\206\5\0\3\206\1\0\1\207\2\206\1\0"+
    "\5\206\3\0\4\206\4\0\2\206\1\207\1\0\1\206"+
    "\2\0\1\206\1\0\14\206\1\u0127\22\206\3\0\1\206"+
    "\5\0\3\206\1\0\1\207\2\206\1\0\5\206\3\0"+
    "\4\206\46\0\1\u0128\53\0\1\u0129\110\0\1\u012a\140\0"+
    "\1\u012b\131\0\1\u012c\36\0\2\u0124\3\0\2\u0124\2\0"+
    "\3\u0124\2\0\3\u0124\1\0\3\u0124\1\0\1\u0124\4\0"+
    "\1\u0124\13\0\1\u0124\6\0\1\u0124\6\0\1\u0124\2\0"+
    "\2\u0124\2\0\1\u012d\1\u0124\13\0\2\u0125\3\0\2\u0125"+
    "\2\0\3\u0125\2\0\3\u0125\1\0\3\u0125\1\0\1\u0125"+
    "\4\0\1\u0125\13\0\1\u0125\6\0\1\u0125\6\0\1\u0125"+
    "\2\0\2\u0125\2\0\1\362\1\u0125\7\0\2\206\1\207"+
    "\1\0\1\206\2\0\1\206\1\0\25\206\1\u012e\11\206"+
    "\3\0\1\206\5\0\3\206\1\0\1\207\2\206\1\0"+
    "\5\206\3\0\4\206\4\0\2\206\1\207\1\0\1\206"+
    "\2\0\1\206\1\0\32\206\1\u012f\4\206\3\0\1\206"+
    "\5\0\3\206\1\0\1\207\2\206\1\0\5\206\3\0"+
    "\4\206\31\0\1\u0130\65\0\1\376\20\0\1\u0131\2\0"+
    "\1\u0132\35\0\1\u0101\1\376\25\0\1\376\1\0\2\u0133"+
    "\3\0\2\u0133\2\0\3\u0133\2\0\3\u0133\1\0\3\u0133"+
    "\1\0\1\u0133\4\0\1\u0133\13\0\1\u0133\6\0\1\u0133"+
    "\1\0\1\u0101\1\376\3\0\1\u0133\2\0\2\u0133\3\0"+
    "\1\u0133\42\0\1\u0134\103\0\1\u0135\67\0\1\u0136\103\0"+
    "\2\206\1\207\1\0\1\206\2\0\1\206\1\0\20\206"+
    "\1\u0137\16\206\3\0\1\206\5\0\3\206\1\0\1\207"+
    "\2\206\1\0\5\206\3\0\4\206\4\0\2\206\1\207"+
    "\1\0\1\206\2\0\1\206\1\0\27\206\1\u0137\7\206"+
    "\3\0\1\206\5\0\3\206\1\0\1\207\2\206\1\0"+
    "\5\206\3\0\4\206\47\0\1\u0138\142\0\1\362\107\0"+
    "\1\362\20\0\2\u0133\3\0\2\u0133\2\0\3\u0133\2\0"+
    "\3\u0133\1\0\3\u0133\1\0\1\u0133\4\0\1\u0133\13\0"+
    "\1\u0133\6\0\1\u0133\6\0\1\u0133\2\0\2\u0133\3\0"+
    "\1\u0133\45\0\1\u0139\102\0\1\u013a\120\0\1\u013b\101\0"+
    "\1\u013b\74\0\1\u013c\126\0\1\u013d\113\0\1\u013e\102\0"+
    "\1\u013f\137\0\1\u0140\102\0\1\162\35\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[20732];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\41\1\1\11\6\0\10\1\1\0\7\1"+
    "\2\0\7\1\1\0\1\1\1\0\2\1\15\0\6\1"+
    "\4\0\1\11\1\0\1\1\1\0\2\1\3\0\4\1"+
    "\1\0\3\1\1\0\1\11\2\0\1\1\6\0\2\1"+
    "\1\0\2\1\5\0\3\1\4\0\1\1\3\0\2\1"+
    "\2\0\1\1\2\11\1\0\1\1\1\11\10\0\1\1"+
    "\2\0\3\1\16\0\7\1\12\0\2\1\2\0\1\1"+
    "\5\0\2\1\13\0\20\1\3\0\1\11\4\0\2\1"+
    "\3\0\1\1\1\0\1\1\10\0\1\11\1\0\10\1"+
    "\2\0\4\1\6\0\2\1\2\0\1\1\4\0\2\1"+
    "\6\0\2\1\3\0\1\1\3\0\1\1\3\0\1\11"+
    "\5\0";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[320];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
 public String lexeme;



  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Tabla(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  Tabla(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 190) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 10: 
          { lexeme=yytext(); return Incorrecta;
          }
        case 20: break;
        case 13: 
          { lexeme=yytext(); return Pseudoinstruccion_Dup_Caracter;
          }
        case 21: break;
        case 8: 
          { lexeme=yytext(); return Constante_Numerica_H;
          }
        case 22: break;
        case 9: 
          { lexeme=yytext(); return Etiqueta;
          }
        case 23: break;
        case 4: 
          { lexeme=yytext(); return Pseudoinstruccion_D_B;
          }
        case 24: break;
        case 7: 
          { return Linea;
          }
        case 25: break;
        case 18: 
          { lexeme=yytext(); return PseudoinstruccionInc;
          }
        case 26: break;
        case 5: 
          { lexeme=yytext(); return Pseudoinstruccion_D_W;
          }
        case 27: break;
        case 14: 
          { lexeme=yytext(); return Pseudoinstruccion_Dup_0;
          }
        case 28: break;
        case 17: 
          { lexeme=yytext(); return  InstruccionCorr;
          }
        case 29: break;
        case 6: 
          { lexeme=yytext(); return Correcta;
          }
        case 30: break;
        case 16: 
          { lexeme=yytext(); return Pseudoinstruccion_Dup_H;
          }
        case 31: break;
        case 15: 
          { lexeme=yytext(); return Constante_Caracter_CD;
          }
        case 32: break;
        case 19: 
          { lexeme=yytext(); return Pseudoinstruccion;
          }
        case 33: break;
        case 2: 
          { lexeme=yytext(); return Constante_Numerica_D;
          }
        case 34: break;
        case 1: 
          { return ERROR;
          }
        case 35: break;
        case 11: 
          { lexeme=yytext(); return Constante_Caracter_CS;
          }
        case 36: break;
        case 3: 
          { /*Ignore*/
          }
        case 37: break;
        case 12: 
          { lexeme=yytext(); return ConstanteCadInc;
          }
        case 38: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
